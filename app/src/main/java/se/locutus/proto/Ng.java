// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

package se.locutus.proto;

public final class Ng {
  private Ng() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code se.locutus.proto.ErrorType}
   */
  public enum ErrorType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN_ERROR = 0;</code>
     */
    UNKNOWN_ERROR(0),
    /**
     * <code>NO_DEPARTURES = 1;</code>
     */
    NO_DEPARTURES(1),
    /**
     * <code>SL_API_ERROR = 2;</code>
     */
    SL_API_ERROR(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_ERROR = 0;</code>
     */
    public static final int UNKNOWN_ERROR_VALUE = 0;
    /**
     * <code>NO_DEPARTURES = 1;</code>
     */
    public static final int NO_DEPARTURES_VALUE = 1;
    /**
     * <code>SL_API_ERROR = 2;</code>
     */
    public static final int SL_API_ERROR_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErrorType valueOf(int value) {
      return forNumber(value);
    }

    public static ErrorType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ERROR;
        case 1: return NO_DEPARTURES;
        case 2: return SL_API_ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErrorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorType>() {
            public ErrorType findValueByNumber(int number) {
              return ErrorType.forNumber(number);
            }
          };

    private final int value;

    private ErrorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:se.locutus.proto.ErrorType)
  }

  /**
   * Protobuf enum {@code se.locutus.proto.NgTrafficType}
   */
  public enum NgTrafficType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN_TRAFFIC_TYPE = 0;</code>
     */
    UNKNOWN_TRAFFIC_TYPE(0),
    /**
     * <code>METRO = 1;</code>
     */
    METRO(1),
    /**
     * <code>BUS = 2;</code>
     */
    BUS(2),
    /**
     * <code>TRAIN = 3;</code>
     */
    TRAIN(3),
    /**
     * <code>TRAM = 4;</code>
     */
    TRAM(4),
    /**
     * <code>BOAT = 5;</code>
     */
    BOAT(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_TRAFFIC_TYPE = 0;</code>
     */
    public static final int UNKNOWN_TRAFFIC_TYPE_VALUE = 0;
    /**
     * <code>METRO = 1;</code>
     */
    public static final int METRO_VALUE = 1;
    /**
     * <code>BUS = 2;</code>
     */
    public static final int BUS_VALUE = 2;
    /**
     * <code>TRAIN = 3;</code>
     */
    public static final int TRAIN_VALUE = 3;
    /**
     * <code>TRAM = 4;</code>
     */
    public static final int TRAM_VALUE = 4;
    /**
     * <code>BOAT = 5;</code>
     */
    public static final int BOAT_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NgTrafficType valueOf(int value) {
      return forNumber(value);
    }

    public static NgTrafficType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TRAFFIC_TYPE;
        case 1: return METRO;
        case 2: return BUS;
        case 3: return TRAIN;
        case 4: return TRAM;
        case 5: return BOAT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NgTrafficType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NgTrafficType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NgTrafficType>() {
            public NgTrafficType findValueByNumber(int number) {
              return NgTrafficType.forNumber(number);
            }
          };

    private final int value;

    private NgTrafficType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:se.locutus.proto.NgTrafficType)
  }

  public interface RequestHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.RequestHeader)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Version ID from client.
     * </pre>
     *
     * <code>optional int32 api = 1;</code>
     */
    int getApi();

    /**
     * <pre>
     * ID of this request, so the response can be identified.
     * </pre>
     *
     * <code>optional int32 id = 2;</code>
     */
    int getId();
  }
  /**
   * <pre>
   * Should be there in each request to the server.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.RequestHeader}
   */
  public  static final class RequestHeader extends
      com.google.protobuf.GeneratedMessageLite<
          RequestHeader, RequestHeader.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.RequestHeader)
      RequestHeaderOrBuilder {
    private RequestHeader() {
    }
    public static final int API_FIELD_NUMBER = 1;
    private int api_;
    /**
     * <pre>
     * Version ID from client.
     * </pre>
     *
     * <code>optional int32 api = 1;</code>
     */
    public int getApi() {
      return api_;
    }
    /**
     * <pre>
     * Version ID from client.
     * </pre>
     *
     * <code>optional int32 api = 1;</code>
     */
    private void setApi(int value) {
      
      api_ = value;
    }
    /**
     * <pre>
     * Version ID from client.
     * </pre>
     *
     * <code>optional int32 api = 1;</code>
     */
    private void clearApi() {
      
      api_ = 0;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <pre>
     * ID of this request, so the response can be identified.
     * </pre>
     *
     * <code>optional int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }
    /**
     * <pre>
     * ID of this request, so the response can be identified.
     * </pre>
     *
     * <code>optional int32 id = 2;</code>
     */
    private void setId(int value) {
      
      id_ = value;
    }
    /**
     * <pre>
     * ID of this request, so the response can be identified.
     * </pre>
     *
     * <code>optional int32 id = 2;</code>
     */
    private void clearId() {
      
      id_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (api_ != 0) {
        output.writeInt32(1, api_);
      }
      if (id_ != 0) {
        output.writeInt32(2, id_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (api_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, api_);
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.RequestHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.RequestHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.RequestHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.RequestHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.RequestHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.RequestHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.RequestHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.RequestHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.RequestHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.RequestHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.RequestHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Should be there in each request to the server.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.RequestHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.RequestHeader, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.RequestHeader)
        se.locutus.proto.Ng.RequestHeaderOrBuilder {
      // Construct using se.locutus.proto.Ng.RequestHeader.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Version ID from client.
       * </pre>
       *
       * <code>optional int32 api = 1;</code>
       */
      public int getApi() {
        return instance.getApi();
      }
      /**
       * <pre>
       * Version ID from client.
       * </pre>
       *
       * <code>optional int32 api = 1;</code>
       */
      public Builder setApi(int value) {
        copyOnWrite();
        instance.setApi(value);
        return this;
      }
      /**
       * <pre>
       * Version ID from client.
       * </pre>
       *
       * <code>optional int32 api = 1;</code>
       */
      public Builder clearApi() {
        copyOnWrite();
        instance.clearApi();
        return this;
      }

      /**
       * <pre>
       * ID of this request, so the response can be identified.
       * </pre>
       *
       * <code>optional int32 id = 2;</code>
       */
      public int getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * ID of this request, so the response can be identified.
       * </pre>
       *
       * <code>optional int32 id = 2;</code>
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * ID of this request, so the response can be identified.
       * </pre>
       *
       * <code>optional int32 id = 2;</code>
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.RequestHeader)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.RequestHeader();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.RequestHeader other = (se.locutus.proto.Ng.RequestHeader) arg1;
          api_ = visitor.visitInt(api_ != 0, api_,
              other.api_ != 0, other.api_);
          id_ = visitor.visitInt(id_ != 0, id_,
              other.id_ != 0, other.id_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  api_ = input.readInt32();
                  break;
                }
                case 16: {

                  id_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.RequestHeader.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.RequestHeader)
    private static final se.locutus.proto.Ng.RequestHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RequestHeader();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.RequestHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RequestHeader> PARSER;

    public static com.google.protobuf.Parser<RequestHeader> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ResponseHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.ResponseHeader)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * ID from the incoming request.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     */
    int getId();
  }
  /**
   * <pre>
   * Present in each response.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.ResponseHeader}
   */
  public  static final class ResponseHeader extends
      com.google.protobuf.GeneratedMessageLite<
          ResponseHeader, ResponseHeader.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.ResponseHeader)
      ResponseHeaderOrBuilder {
    private ResponseHeader() {
    }
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * ID from the incoming request.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }
    /**
     * <pre>
     * ID from the incoming request.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     */
    private void setId(int value) {
      
      id_ = value;
    }
    /**
     * <pre>
     * ID from the incoming request.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     */
    private void clearId() {
      
      id_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.ResponseHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.ResponseHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ResponseHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.ResponseHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ResponseHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ResponseHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ResponseHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ResponseHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ResponseHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ResponseHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.ResponseHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Present in each response.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.ResponseHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.ResponseHeader, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.ResponseHeader)
        se.locutus.proto.Ng.ResponseHeaderOrBuilder {
      // Construct using se.locutus.proto.Ng.ResponseHeader.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * ID from the incoming request.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * ID from the incoming request.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * ID from the incoming request.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.ResponseHeader)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.ResponseHeader();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.ResponseHeader other = (se.locutus.proto.Ng.ResponseHeader) arg1;
          id_ = visitor.visitInt(id_ != 0, id_,
              other.id_ != 0, other.id_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  id_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.ResponseHeader.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.ResponseHeader)
    private static final se.locutus.proto.Ng.ResponseHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ResponseHeader();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.ResponseHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ResponseHeader> PARSER;

    public static com.google.protobuf.Parser<ResponseHeader> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RequestDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.RequestData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
     */
    boolean hasRequestHeader();
    /**
     * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
     */
    se.locutus.proto.Ng.RequestHeader getRequestHeader();

    /**
     * <pre>
     * Ping to see server is reachable.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
     */
    boolean hasPingRequest();
    /**
     * <pre>
     * Ping to see server is reachable.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
     */
    se.locutus.proto.Ng.PingRequestResponse getPingRequest();

    /**
     * <pre>
     * Request to load data from a particular stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
     */
    boolean hasStopDataRequest();
    /**
     * <pre>
     * Request to load data from a particular stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
     */
    se.locutus.proto.Ng.StopDataRequest getStopDataRequest();
  }
  /**
   * <pre>
   * Base request message.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.RequestData}
   */
  public  static final class RequestData extends
      com.google.protobuf.GeneratedMessageLite<
          RequestData, RequestData.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.RequestData)
      RequestDataOrBuilder {
    private RequestData() {
    }
    public static final int REQUEST_HEADER_FIELD_NUMBER = 1;
    private se.locutus.proto.Ng.RequestHeader requestHeader_;
    /**
     * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
     */
    public boolean hasRequestHeader() {
      return requestHeader_ != null;
    }
    /**
     * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
     */
    public se.locutus.proto.Ng.RequestHeader getRequestHeader() {
      return requestHeader_ == null ? se.locutus.proto.Ng.RequestHeader.getDefaultInstance() : requestHeader_;
    }
    /**
     * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
     */
    private void setRequestHeader(se.locutus.proto.Ng.RequestHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      requestHeader_ = value;
      
      }
    /**
     * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
     */
    private void setRequestHeader(
        se.locutus.proto.Ng.RequestHeader.Builder builderForValue) {
      requestHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
     */
    private void mergeRequestHeader(se.locutus.proto.Ng.RequestHeader value) {
      if (requestHeader_ != null &&
          requestHeader_ != se.locutus.proto.Ng.RequestHeader.getDefaultInstance()) {
        requestHeader_ =
          se.locutus.proto.Ng.RequestHeader.newBuilder(requestHeader_).mergeFrom(value).buildPartial();
      } else {
        requestHeader_ = value;
      }
      
    }
    /**
     * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
     */
    private void clearRequestHeader() {  requestHeader_ = null;
      
    }

    public static final int PING_REQUEST_FIELD_NUMBER = 2;
    private se.locutus.proto.Ng.PingRequestResponse pingRequest_;
    /**
     * <pre>
     * Ping to see server is reachable.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
     */
    public boolean hasPingRequest() {
      return pingRequest_ != null;
    }
    /**
     * <pre>
     * Ping to see server is reachable.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
     */
    public se.locutus.proto.Ng.PingRequestResponse getPingRequest() {
      return pingRequest_ == null ? se.locutus.proto.Ng.PingRequestResponse.getDefaultInstance() : pingRequest_;
    }
    /**
     * <pre>
     * Ping to see server is reachable.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
     */
    private void setPingRequest(se.locutus.proto.Ng.PingRequestResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pingRequest_ = value;
      
      }
    /**
     * <pre>
     * Ping to see server is reachable.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
     */
    private void setPingRequest(
        se.locutus.proto.Ng.PingRequestResponse.Builder builderForValue) {
      pingRequest_ = builderForValue.build();
      
    }
    /**
     * <pre>
     * Ping to see server is reachable.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
     */
    private void mergePingRequest(se.locutus.proto.Ng.PingRequestResponse value) {
      if (pingRequest_ != null &&
          pingRequest_ != se.locutus.proto.Ng.PingRequestResponse.getDefaultInstance()) {
        pingRequest_ =
          se.locutus.proto.Ng.PingRequestResponse.newBuilder(pingRequest_).mergeFrom(value).buildPartial();
      } else {
        pingRequest_ = value;
      }
      
    }
    /**
     * <pre>
     * Ping to see server is reachable.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
     */
    private void clearPingRequest() {  pingRequest_ = null;
      
    }

    public static final int STOP_DATA_REQUEST_FIELD_NUMBER = 3;
    private se.locutus.proto.Ng.StopDataRequest stopDataRequest_;
    /**
     * <pre>
     * Request to load data from a particular stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
     */
    public boolean hasStopDataRequest() {
      return stopDataRequest_ != null;
    }
    /**
     * <pre>
     * Request to load data from a particular stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
     */
    public se.locutus.proto.Ng.StopDataRequest getStopDataRequest() {
      return stopDataRequest_ == null ? se.locutus.proto.Ng.StopDataRequest.getDefaultInstance() : stopDataRequest_;
    }
    /**
     * <pre>
     * Request to load data from a particular stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
     */
    private void setStopDataRequest(se.locutus.proto.Ng.StopDataRequest value) {
      if (value == null) {
        throw new NullPointerException();
      }
      stopDataRequest_ = value;
      
      }
    /**
     * <pre>
     * Request to load data from a particular stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
     */
    private void setStopDataRequest(
        se.locutus.proto.Ng.StopDataRequest.Builder builderForValue) {
      stopDataRequest_ = builderForValue.build();
      
    }
    /**
     * <pre>
     * Request to load data from a particular stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
     */
    private void mergeStopDataRequest(se.locutus.proto.Ng.StopDataRequest value) {
      if (stopDataRequest_ != null &&
          stopDataRequest_ != se.locutus.proto.Ng.StopDataRequest.getDefaultInstance()) {
        stopDataRequest_ =
          se.locutus.proto.Ng.StopDataRequest.newBuilder(stopDataRequest_).mergeFrom(value).buildPartial();
      } else {
        stopDataRequest_ = value;
      }
      
    }
    /**
     * <pre>
     * Request to load data from a particular stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
     */
    private void clearStopDataRequest() {  stopDataRequest_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestHeader_ != null) {
        output.writeMessage(1, getRequestHeader());
      }
      if (pingRequest_ != null) {
        output.writeMessage(2, getPingRequest());
      }
      if (stopDataRequest_ != null) {
        output.writeMessage(3, getStopDataRequest());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (requestHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRequestHeader());
      }
      if (pingRequest_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPingRequest());
      }
      if (stopDataRequest_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getStopDataRequest());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.RequestData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.RequestData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.RequestData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.RequestData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.RequestData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.RequestData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.RequestData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.RequestData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.RequestData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.RequestData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.RequestData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Base request message.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.RequestData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.RequestData, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.RequestData)
        se.locutus.proto.Ng.RequestDataOrBuilder {
      // Construct using se.locutus.proto.Ng.RequestData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
       */
      public boolean hasRequestHeader() {
        return instance.hasRequestHeader();
      }
      /**
       * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
       */
      public se.locutus.proto.Ng.RequestHeader getRequestHeader() {
        return instance.getRequestHeader();
      }
      /**
       * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
       */
      public Builder setRequestHeader(se.locutus.proto.Ng.RequestHeader value) {
        copyOnWrite();
        instance.setRequestHeader(value);
        return this;
        }
      /**
       * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
       */
      public Builder setRequestHeader(
          se.locutus.proto.Ng.RequestHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setRequestHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
       */
      public Builder mergeRequestHeader(se.locutus.proto.Ng.RequestHeader value) {
        copyOnWrite();
        instance.mergeRequestHeader(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.RequestHeader request_header = 1;</code>
       */
      public Builder clearRequestHeader() {  copyOnWrite();
        instance.clearRequestHeader();
        return this;
      }

      /**
       * <pre>
       * Ping to see server is reachable.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
       */
      public boolean hasPingRequest() {
        return instance.hasPingRequest();
      }
      /**
       * <pre>
       * Ping to see server is reachable.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
       */
      public se.locutus.proto.Ng.PingRequestResponse getPingRequest() {
        return instance.getPingRequest();
      }
      /**
       * <pre>
       * Ping to see server is reachable.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
       */
      public Builder setPingRequest(se.locutus.proto.Ng.PingRequestResponse value) {
        copyOnWrite();
        instance.setPingRequest(value);
        return this;
        }
      /**
       * <pre>
       * Ping to see server is reachable.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
       */
      public Builder setPingRequest(
          se.locutus.proto.Ng.PingRequestResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setPingRequest(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Ping to see server is reachable.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
       */
      public Builder mergePingRequest(se.locutus.proto.Ng.PingRequestResponse value) {
        copyOnWrite();
        instance.mergePingRequest(value);
        return this;
      }
      /**
       * <pre>
       * Ping to see server is reachable.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_request = 2;</code>
       */
      public Builder clearPingRequest() {  copyOnWrite();
        instance.clearPingRequest();
        return this;
      }

      /**
       * <pre>
       * Request to load data from a particular stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
       */
      public boolean hasStopDataRequest() {
        return instance.hasStopDataRequest();
      }
      /**
       * <pre>
       * Request to load data from a particular stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
       */
      public se.locutus.proto.Ng.StopDataRequest getStopDataRequest() {
        return instance.getStopDataRequest();
      }
      /**
       * <pre>
       * Request to load data from a particular stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
       */
      public Builder setStopDataRequest(se.locutus.proto.Ng.StopDataRequest value) {
        copyOnWrite();
        instance.setStopDataRequest(value);
        return this;
        }
      /**
       * <pre>
       * Request to load data from a particular stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
       */
      public Builder setStopDataRequest(
          se.locutus.proto.Ng.StopDataRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setStopDataRequest(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Request to load data from a particular stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
       */
      public Builder mergeStopDataRequest(se.locutus.proto.Ng.StopDataRequest value) {
        copyOnWrite();
        instance.mergeStopDataRequest(value);
        return this;
      }
      /**
       * <pre>
       * Request to load data from a particular stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopDataRequest stop_data_request = 3;</code>
       */
      public Builder clearStopDataRequest() {  copyOnWrite();
        instance.clearStopDataRequest();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.RequestData)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.RequestData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.RequestData other = (se.locutus.proto.Ng.RequestData) arg1;
          requestHeader_ = visitor.visitMessage(requestHeader_, other.requestHeader_);
          pingRequest_ = visitor.visitMessage(pingRequest_, other.pingRequest_);
          stopDataRequest_ = visitor.visitMessage(stopDataRequest_, other.stopDataRequest_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  se.locutus.proto.Ng.RequestHeader.Builder subBuilder = null;
                  if (requestHeader_ != null) {
                    subBuilder = requestHeader_.toBuilder();
                  }
                  requestHeader_ = input.readMessage(se.locutus.proto.Ng.RequestHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(requestHeader_);
                    requestHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  se.locutus.proto.Ng.PingRequestResponse.Builder subBuilder = null;
                  if (pingRequest_ != null) {
                    subBuilder = pingRequest_.toBuilder();
                  }
                  pingRequest_ = input.readMessage(se.locutus.proto.Ng.PingRequestResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pingRequest_);
                    pingRequest_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  se.locutus.proto.Ng.StopDataRequest.Builder subBuilder = null;
                  if (stopDataRequest_ != null) {
                    subBuilder = stopDataRequest_.toBuilder();
                  }
                  stopDataRequest_ = input.readMessage(se.locutus.proto.Ng.StopDataRequest.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(stopDataRequest_);
                    stopDataRequest_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.RequestData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.RequestData)
    private static final se.locutus.proto.Ng.RequestData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RequestData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.RequestData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RequestData> PARSER;

    public static com.google.protobuf.Parser<RequestData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ResponseDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.ResponseData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
     */
    boolean hasResponseHeader();
    /**
     * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
     */
    se.locutus.proto.Ng.ResponseHeader getResponseHeader();

    /**
     * <pre>
     * Response with data suitable to display in widget.
     * </pre>
     *
     * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
     */
    boolean hasLoadResponse();
    /**
     * <pre>
     * Response with data suitable to display in widget.
     * </pre>
     *
     * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
     */
    se.locutus.proto.Ng.WidgetLoadResponseData getLoadResponse();

    /**
     * <pre>
     * Returns all departures for a stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
     */
    boolean hasAllDepaturesResponse();
    /**
     * <pre>
     * Returns all departures for a stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
     */
    se.locutus.proto.Ng.AllDepaturesResponseData getAllDepaturesResponse();

    /**
     * <pre>
     * A response to a ping.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
     */
    boolean hasPingResponse();
    /**
     * <pre>
     * A response to a ping.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
     */
    se.locutus.proto.Ng.PingRequestResponse getPingResponse();

    /**
     * <pre>
     * Error response, set if we could handle the error
     * </pre>
     *
     * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
     */
    boolean hasErrorResponse();
    /**
     * <pre>
     * Error response, set if we could handle the error
     * </pre>
     *
     * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
     */
    se.locutus.proto.Ng.LoadErrorResponse getErrorResponse();
  }
  /**
   * <pre>
   * Base response message.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.ResponseData}
   */
  public  static final class ResponseData extends
      com.google.protobuf.GeneratedMessageLite<
          ResponseData, ResponseData.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.ResponseData)
      ResponseDataOrBuilder {
    private ResponseData() {
    }
    public static final int RESPONSE_HEADER_FIELD_NUMBER = 1;
    private se.locutus.proto.Ng.ResponseHeader responseHeader_;
    /**
     * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
     */
    public boolean hasResponseHeader() {
      return responseHeader_ != null;
    }
    /**
     * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
     */
    public se.locutus.proto.Ng.ResponseHeader getResponseHeader() {
      return responseHeader_ == null ? se.locutus.proto.Ng.ResponseHeader.getDefaultInstance() : responseHeader_;
    }
    /**
     * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
     */
    private void setResponseHeader(se.locutus.proto.Ng.ResponseHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      responseHeader_ = value;
      
      }
    /**
     * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
     */
    private void setResponseHeader(
        se.locutus.proto.Ng.ResponseHeader.Builder builderForValue) {
      responseHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
     */
    private void mergeResponseHeader(se.locutus.proto.Ng.ResponseHeader value) {
      if (responseHeader_ != null &&
          responseHeader_ != se.locutus.proto.Ng.ResponseHeader.getDefaultInstance()) {
        responseHeader_ =
          se.locutus.proto.Ng.ResponseHeader.newBuilder(responseHeader_).mergeFrom(value).buildPartial();
      } else {
        responseHeader_ = value;
      }
      
    }
    /**
     * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
     */
    private void clearResponseHeader() {  responseHeader_ = null;
      
    }

    public static final int LOAD_RESPONSE_FIELD_NUMBER = 2;
    private se.locutus.proto.Ng.WidgetLoadResponseData loadResponse_;
    /**
     * <pre>
     * Response with data suitable to display in widget.
     * </pre>
     *
     * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
     */
    public boolean hasLoadResponse() {
      return loadResponse_ != null;
    }
    /**
     * <pre>
     * Response with data suitable to display in widget.
     * </pre>
     *
     * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
     */
    public se.locutus.proto.Ng.WidgetLoadResponseData getLoadResponse() {
      return loadResponse_ == null ? se.locutus.proto.Ng.WidgetLoadResponseData.getDefaultInstance() : loadResponse_;
    }
    /**
     * <pre>
     * Response with data suitable to display in widget.
     * </pre>
     *
     * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
     */
    private void setLoadResponse(se.locutus.proto.Ng.WidgetLoadResponseData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      loadResponse_ = value;
      
      }
    /**
     * <pre>
     * Response with data suitable to display in widget.
     * </pre>
     *
     * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
     */
    private void setLoadResponse(
        se.locutus.proto.Ng.WidgetLoadResponseData.Builder builderForValue) {
      loadResponse_ = builderForValue.build();
      
    }
    /**
     * <pre>
     * Response with data suitable to display in widget.
     * </pre>
     *
     * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
     */
    private void mergeLoadResponse(se.locutus.proto.Ng.WidgetLoadResponseData value) {
      if (loadResponse_ != null &&
          loadResponse_ != se.locutus.proto.Ng.WidgetLoadResponseData.getDefaultInstance()) {
        loadResponse_ =
          se.locutus.proto.Ng.WidgetLoadResponseData.newBuilder(loadResponse_).mergeFrom(value).buildPartial();
      } else {
        loadResponse_ = value;
      }
      
    }
    /**
     * <pre>
     * Response with data suitable to display in widget.
     * </pre>
     *
     * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
     */
    private void clearLoadResponse() {  loadResponse_ = null;
      
    }

    public static final int ALL_DEPATURES_RESPONSE_FIELD_NUMBER = 3;
    private se.locutus.proto.Ng.AllDepaturesResponseData allDepaturesResponse_;
    /**
     * <pre>
     * Returns all departures for a stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
     */
    public boolean hasAllDepaturesResponse() {
      return allDepaturesResponse_ != null;
    }
    /**
     * <pre>
     * Returns all departures for a stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
     */
    public se.locutus.proto.Ng.AllDepaturesResponseData getAllDepaturesResponse() {
      return allDepaturesResponse_ == null ? se.locutus.proto.Ng.AllDepaturesResponseData.getDefaultInstance() : allDepaturesResponse_;
    }
    /**
     * <pre>
     * Returns all departures for a stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
     */
    private void setAllDepaturesResponse(se.locutus.proto.Ng.AllDepaturesResponseData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      allDepaturesResponse_ = value;
      
      }
    /**
     * <pre>
     * Returns all departures for a stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
     */
    private void setAllDepaturesResponse(
        se.locutus.proto.Ng.AllDepaturesResponseData.Builder builderForValue) {
      allDepaturesResponse_ = builderForValue.build();
      
    }
    /**
     * <pre>
     * Returns all departures for a stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
     */
    private void mergeAllDepaturesResponse(se.locutus.proto.Ng.AllDepaturesResponseData value) {
      if (allDepaturesResponse_ != null &&
          allDepaturesResponse_ != se.locutus.proto.Ng.AllDepaturesResponseData.getDefaultInstance()) {
        allDepaturesResponse_ =
          se.locutus.proto.Ng.AllDepaturesResponseData.newBuilder(allDepaturesResponse_).mergeFrom(value).buildPartial();
      } else {
        allDepaturesResponse_ = value;
      }
      
    }
    /**
     * <pre>
     * Returns all departures for a stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
     */
    private void clearAllDepaturesResponse() {  allDepaturesResponse_ = null;
      
    }

    public static final int PING_RESPONSE_FIELD_NUMBER = 4;
    private se.locutus.proto.Ng.PingRequestResponse pingResponse_;
    /**
     * <pre>
     * A response to a ping.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
     */
    public boolean hasPingResponse() {
      return pingResponse_ != null;
    }
    /**
     * <pre>
     * A response to a ping.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
     */
    public se.locutus.proto.Ng.PingRequestResponse getPingResponse() {
      return pingResponse_ == null ? se.locutus.proto.Ng.PingRequestResponse.getDefaultInstance() : pingResponse_;
    }
    /**
     * <pre>
     * A response to a ping.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
     */
    private void setPingResponse(se.locutus.proto.Ng.PingRequestResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pingResponse_ = value;
      
      }
    /**
     * <pre>
     * A response to a ping.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
     */
    private void setPingResponse(
        se.locutus.proto.Ng.PingRequestResponse.Builder builderForValue) {
      pingResponse_ = builderForValue.build();
      
    }
    /**
     * <pre>
     * A response to a ping.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
     */
    private void mergePingResponse(se.locutus.proto.Ng.PingRequestResponse value) {
      if (pingResponse_ != null &&
          pingResponse_ != se.locutus.proto.Ng.PingRequestResponse.getDefaultInstance()) {
        pingResponse_ =
          se.locutus.proto.Ng.PingRequestResponse.newBuilder(pingResponse_).mergeFrom(value).buildPartial();
      } else {
        pingResponse_ = value;
      }
      
    }
    /**
     * <pre>
     * A response to a ping.
     * </pre>
     *
     * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
     */
    private void clearPingResponse() {  pingResponse_ = null;
      
    }

    public static final int ERROR_RESPONSE_FIELD_NUMBER = 5;
    private se.locutus.proto.Ng.LoadErrorResponse errorResponse_;
    /**
     * <pre>
     * Error response, set if we could handle the error
     * </pre>
     *
     * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
     */
    public boolean hasErrorResponse() {
      return errorResponse_ != null;
    }
    /**
     * <pre>
     * Error response, set if we could handle the error
     * </pre>
     *
     * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
     */
    public se.locutus.proto.Ng.LoadErrorResponse getErrorResponse() {
      return errorResponse_ == null ? se.locutus.proto.Ng.LoadErrorResponse.getDefaultInstance() : errorResponse_;
    }
    /**
     * <pre>
     * Error response, set if we could handle the error
     * </pre>
     *
     * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
     */
    private void setErrorResponse(se.locutus.proto.Ng.LoadErrorResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      errorResponse_ = value;
      
      }
    /**
     * <pre>
     * Error response, set if we could handle the error
     * </pre>
     *
     * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
     */
    private void setErrorResponse(
        se.locutus.proto.Ng.LoadErrorResponse.Builder builderForValue) {
      errorResponse_ = builderForValue.build();
      
    }
    /**
     * <pre>
     * Error response, set if we could handle the error
     * </pre>
     *
     * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
     */
    private void mergeErrorResponse(se.locutus.proto.Ng.LoadErrorResponse value) {
      if (errorResponse_ != null &&
          errorResponse_ != se.locutus.proto.Ng.LoadErrorResponse.getDefaultInstance()) {
        errorResponse_ =
          se.locutus.proto.Ng.LoadErrorResponse.newBuilder(errorResponse_).mergeFrom(value).buildPartial();
      } else {
        errorResponse_ = value;
      }
      
    }
    /**
     * <pre>
     * Error response, set if we could handle the error
     * </pre>
     *
     * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
     */
    private void clearErrorResponse() {  errorResponse_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responseHeader_ != null) {
        output.writeMessage(1, getResponseHeader());
      }
      if (loadResponse_ != null) {
        output.writeMessage(2, getLoadResponse());
      }
      if (allDepaturesResponse_ != null) {
        output.writeMessage(3, getAllDepaturesResponse());
      }
      if (pingResponse_ != null) {
        output.writeMessage(4, getPingResponse());
      }
      if (errorResponse_ != null) {
        output.writeMessage(5, getErrorResponse());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (responseHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponseHeader());
      }
      if (loadResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLoadResponse());
      }
      if (allDepaturesResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAllDepaturesResponse());
      }
      if (pingResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPingResponse());
      }
      if (errorResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getErrorResponse());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.ResponseData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.ResponseData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ResponseData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.ResponseData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ResponseData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ResponseData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ResponseData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ResponseData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ResponseData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ResponseData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.ResponseData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Base response message.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.ResponseData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.ResponseData, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.ResponseData)
        se.locutus.proto.Ng.ResponseDataOrBuilder {
      // Construct using se.locutus.proto.Ng.ResponseData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
       */
      public boolean hasResponseHeader() {
        return instance.hasResponseHeader();
      }
      /**
       * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
       */
      public se.locutus.proto.Ng.ResponseHeader getResponseHeader() {
        return instance.getResponseHeader();
      }
      /**
       * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
       */
      public Builder setResponseHeader(se.locutus.proto.Ng.ResponseHeader value) {
        copyOnWrite();
        instance.setResponseHeader(value);
        return this;
        }
      /**
       * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
       */
      public Builder setResponseHeader(
          se.locutus.proto.Ng.ResponseHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setResponseHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
       */
      public Builder mergeResponseHeader(se.locutus.proto.Ng.ResponseHeader value) {
        copyOnWrite();
        instance.mergeResponseHeader(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.ResponseHeader response_header = 1;</code>
       */
      public Builder clearResponseHeader() {  copyOnWrite();
        instance.clearResponseHeader();
        return this;
      }

      /**
       * <pre>
       * Response with data suitable to display in widget.
       * </pre>
       *
       * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
       */
      public boolean hasLoadResponse() {
        return instance.hasLoadResponse();
      }
      /**
       * <pre>
       * Response with data suitable to display in widget.
       * </pre>
       *
       * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
       */
      public se.locutus.proto.Ng.WidgetLoadResponseData getLoadResponse() {
        return instance.getLoadResponse();
      }
      /**
       * <pre>
       * Response with data suitable to display in widget.
       * </pre>
       *
       * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
       */
      public Builder setLoadResponse(se.locutus.proto.Ng.WidgetLoadResponseData value) {
        copyOnWrite();
        instance.setLoadResponse(value);
        return this;
        }
      /**
       * <pre>
       * Response with data suitable to display in widget.
       * </pre>
       *
       * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
       */
      public Builder setLoadResponse(
          se.locutus.proto.Ng.WidgetLoadResponseData.Builder builderForValue) {
        copyOnWrite();
        instance.setLoadResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Response with data suitable to display in widget.
       * </pre>
       *
       * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
       */
      public Builder mergeLoadResponse(se.locutus.proto.Ng.WidgetLoadResponseData value) {
        copyOnWrite();
        instance.mergeLoadResponse(value);
        return this;
      }
      /**
       * <pre>
       * Response with data suitable to display in widget.
       * </pre>
       *
       * <code>optional .se.locutus.proto.WidgetLoadResponseData load_response = 2;</code>
       */
      public Builder clearLoadResponse() {  copyOnWrite();
        instance.clearLoadResponse();
        return this;
      }

      /**
       * <pre>
       * Returns all departures for a stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
       */
      public boolean hasAllDepaturesResponse() {
        return instance.hasAllDepaturesResponse();
      }
      /**
       * <pre>
       * Returns all departures for a stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
       */
      public se.locutus.proto.Ng.AllDepaturesResponseData getAllDepaturesResponse() {
        return instance.getAllDepaturesResponse();
      }
      /**
       * <pre>
       * Returns all departures for a stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
       */
      public Builder setAllDepaturesResponse(se.locutus.proto.Ng.AllDepaturesResponseData value) {
        copyOnWrite();
        instance.setAllDepaturesResponse(value);
        return this;
        }
      /**
       * <pre>
       * Returns all departures for a stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
       */
      public Builder setAllDepaturesResponse(
          se.locutus.proto.Ng.AllDepaturesResponseData.Builder builderForValue) {
        copyOnWrite();
        instance.setAllDepaturesResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Returns all departures for a stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
       */
      public Builder mergeAllDepaturesResponse(se.locutus.proto.Ng.AllDepaturesResponseData value) {
        copyOnWrite();
        instance.mergeAllDepaturesResponse(value);
        return this;
      }
      /**
       * <pre>
       * Returns all departures for a stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.AllDepaturesResponseData all_depatures_response = 3;</code>
       */
      public Builder clearAllDepaturesResponse() {  copyOnWrite();
        instance.clearAllDepaturesResponse();
        return this;
      }

      /**
       * <pre>
       * A response to a ping.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
       */
      public boolean hasPingResponse() {
        return instance.hasPingResponse();
      }
      /**
       * <pre>
       * A response to a ping.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
       */
      public se.locutus.proto.Ng.PingRequestResponse getPingResponse() {
        return instance.getPingResponse();
      }
      /**
       * <pre>
       * A response to a ping.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
       */
      public Builder setPingResponse(se.locutus.proto.Ng.PingRequestResponse value) {
        copyOnWrite();
        instance.setPingResponse(value);
        return this;
        }
      /**
       * <pre>
       * A response to a ping.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
       */
      public Builder setPingResponse(
          se.locutus.proto.Ng.PingRequestResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setPingResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       * A response to a ping.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
       */
      public Builder mergePingResponse(se.locutus.proto.Ng.PingRequestResponse value) {
        copyOnWrite();
        instance.mergePingResponse(value);
        return this;
      }
      /**
       * <pre>
       * A response to a ping.
       * </pre>
       *
       * <code>optional .se.locutus.proto.PingRequestResponse ping_response = 4;</code>
       */
      public Builder clearPingResponse() {  copyOnWrite();
        instance.clearPingResponse();
        return this;
      }

      /**
       * <pre>
       * Error response, set if we could handle the error
       * </pre>
       *
       * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
       */
      public boolean hasErrorResponse() {
        return instance.hasErrorResponse();
      }
      /**
       * <pre>
       * Error response, set if we could handle the error
       * </pre>
       *
       * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
       */
      public se.locutus.proto.Ng.LoadErrorResponse getErrorResponse() {
        return instance.getErrorResponse();
      }
      /**
       * <pre>
       * Error response, set if we could handle the error
       * </pre>
       *
       * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
       */
      public Builder setErrorResponse(se.locutus.proto.Ng.LoadErrorResponse value) {
        copyOnWrite();
        instance.setErrorResponse(value);
        return this;
        }
      /**
       * <pre>
       * Error response, set if we could handle the error
       * </pre>
       *
       * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
       */
      public Builder setErrorResponse(
          se.locutus.proto.Ng.LoadErrorResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setErrorResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Error response, set if we could handle the error
       * </pre>
       *
       * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
       */
      public Builder mergeErrorResponse(se.locutus.proto.Ng.LoadErrorResponse value) {
        copyOnWrite();
        instance.mergeErrorResponse(value);
        return this;
      }
      /**
       * <pre>
       * Error response, set if we could handle the error
       * </pre>
       *
       * <code>optional .se.locutus.proto.LoadErrorResponse error_response = 5;</code>
       */
      public Builder clearErrorResponse() {  copyOnWrite();
        instance.clearErrorResponse();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.ResponseData)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.ResponseData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.ResponseData other = (se.locutus.proto.Ng.ResponseData) arg1;
          responseHeader_ = visitor.visitMessage(responseHeader_, other.responseHeader_);
          loadResponse_ = visitor.visitMessage(loadResponse_, other.loadResponse_);
          allDepaturesResponse_ = visitor.visitMessage(allDepaturesResponse_, other.allDepaturesResponse_);
          pingResponse_ = visitor.visitMessage(pingResponse_, other.pingResponse_);
          errorResponse_ = visitor.visitMessage(errorResponse_, other.errorResponse_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  se.locutus.proto.Ng.ResponseHeader.Builder subBuilder = null;
                  if (responseHeader_ != null) {
                    subBuilder = responseHeader_.toBuilder();
                  }
                  responseHeader_ = input.readMessage(se.locutus.proto.Ng.ResponseHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(responseHeader_);
                    responseHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  se.locutus.proto.Ng.WidgetLoadResponseData.Builder subBuilder = null;
                  if (loadResponse_ != null) {
                    subBuilder = loadResponse_.toBuilder();
                  }
                  loadResponse_ = input.readMessage(se.locutus.proto.Ng.WidgetLoadResponseData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(loadResponse_);
                    loadResponse_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  se.locutus.proto.Ng.AllDepaturesResponseData.Builder subBuilder = null;
                  if (allDepaturesResponse_ != null) {
                    subBuilder = allDepaturesResponse_.toBuilder();
                  }
                  allDepaturesResponse_ = input.readMessage(se.locutus.proto.Ng.AllDepaturesResponseData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(allDepaturesResponse_);
                    allDepaturesResponse_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  se.locutus.proto.Ng.PingRequestResponse.Builder subBuilder = null;
                  if (pingResponse_ != null) {
                    subBuilder = pingResponse_.toBuilder();
                  }
                  pingResponse_ = input.readMessage(se.locutus.proto.Ng.PingRequestResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pingResponse_);
                    pingResponse_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  se.locutus.proto.Ng.LoadErrorResponse.Builder subBuilder = null;
                  if (errorResponse_ != null) {
                    subBuilder = errorResponse_.toBuilder();
                  }
                  errorResponse_ = input.readMessage(se.locutus.proto.Ng.LoadErrorResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(errorResponse_);
                    errorResponse_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.ResponseData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.ResponseData)
    private static final se.locutus.proto.Ng.ResponseData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ResponseData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.ResponseData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ResponseData> PARSER;

    public static com.google.protobuf.Parser<ResponseData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WidgetLoadResponseDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.WidgetLoadResponseData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * What to put in line1.
     * </pre>
     *
     * <code>optional string line1 = 1;</code>
     */
    java.lang.String getLine1();
    /**
     * <pre>
     * What to put in line1.
     * </pre>
     *
     * <code>optional string line1 = 1;</code>
     */
    com.google.protobuf.ByteString
        getLine1Bytes();

    /**
     * <pre>
     * What to put in line2.
     * </pre>
     *
     * <code>optional string line2 = 2;</code>
     */
    java.lang.String getLine2();
    /**
     * <pre>
     * What to put in line2.
     * </pre>
     *
     * <code>optional string line2 = 2;</code>
     */
    com.google.protobuf.ByteString
        getLine2Bytes();

    /**
     * <pre>
     * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
     * </pre>
     *
     * <code>optional string minutes = 3;</code>
     */
    java.lang.String getMinutes();
    /**
     * <pre>
     * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
     * </pre>
     *
     * <code>optional string minutes = 3;</code>
     */
    com.google.protobuf.ByteString
        getMinutesBytes();

    /**
     * <pre>
     * If realtime we include seconds to departure.
     * </pre>
     *
     * <code>optional int32 seconds = 4;</code>
     */
    int getSeconds();

    /**
     * <pre>
     * Color representing this departure.
     * </pre>
     *
     * <code>optional int32 color = 5;</code>
     */
    int getColor();

    /**
     * <pre>
     * Traffic type for the line1 departure.
     * </pre>
     *
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
     */
    int getTrafficTypeValue();
    /**
     * <pre>
     * Traffic type for the line1 departure.
     * </pre>
     *
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
     */
    se.locutus.proto.Ng.NgTrafficType getTrafficType();

    /**
     * <pre>
     * What the widget should show when idle, at line 2.
     * </pre>
     *
     * <code>optional string idle_message = 7;</code>
     */
    java.lang.String getIdleMessage();
    /**
     * <pre>
     * What the widget should show when idle, at line 2.
     * </pre>
     *
     * <code>optional string idle_message = 7;</code>
     */
    com.google.protobuf.ByteString
        getIdleMessageBytes();

    /**
     * <pre>
     * URL with information that opens when line2 is touched.
     * </pre>
     *
     * <code>optional string url = 8;</code>
     */
    java.lang.String getUrl();
    /**
     * <pre>
     * URL with information that opens when line2 is touched.
     * </pre>
     *
     * <code>optional string url = 8;</code>
     */
    com.google.protobuf.ByteString
        getUrlBytes();
  }
  /**
   * <pre>
   * Response message suitable to put in the widget.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.WidgetLoadResponseData}
   */
  public  static final class WidgetLoadResponseData extends
      com.google.protobuf.GeneratedMessageLite<
          WidgetLoadResponseData, WidgetLoadResponseData.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.WidgetLoadResponseData)
      WidgetLoadResponseDataOrBuilder {
    private WidgetLoadResponseData() {
      line1_ = "";
      line2_ = "";
      minutes_ = "";
      idleMessage_ = "";
      url_ = "";
    }
    public static final int LINE1_FIELD_NUMBER = 1;
    private java.lang.String line1_;
    /**
     * <pre>
     * What to put in line1.
     * </pre>
     *
     * <code>optional string line1 = 1;</code>
     */
    public java.lang.String getLine1() {
      return line1_;
    }
    /**
     * <pre>
     * What to put in line1.
     * </pre>
     *
     * <code>optional string line1 = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLine1Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(line1_);
    }
    /**
     * <pre>
     * What to put in line1.
     * </pre>
     *
     * <code>optional string line1 = 1;</code>
     */
    private void setLine1(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      line1_ = value;
    }
    /**
     * <pre>
     * What to put in line1.
     * </pre>
     *
     * <code>optional string line1 = 1;</code>
     */
    private void clearLine1() {
      
      line1_ = getDefaultInstance().getLine1();
    }
    /**
     * <pre>
     * What to put in line1.
     * </pre>
     *
     * <code>optional string line1 = 1;</code>
     */
    private void setLine1Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      line1_ = value.toStringUtf8();
    }

    public static final int LINE2_FIELD_NUMBER = 2;
    private java.lang.String line2_;
    /**
     * <pre>
     * What to put in line2.
     * </pre>
     *
     * <code>optional string line2 = 2;</code>
     */
    public java.lang.String getLine2() {
      return line2_;
    }
    /**
     * <pre>
     * What to put in line2.
     * </pre>
     *
     * <code>optional string line2 = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLine2Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(line2_);
    }
    /**
     * <pre>
     * What to put in line2.
     * </pre>
     *
     * <code>optional string line2 = 2;</code>
     */
    private void setLine2(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      line2_ = value;
    }
    /**
     * <pre>
     * What to put in line2.
     * </pre>
     *
     * <code>optional string line2 = 2;</code>
     */
    private void clearLine2() {
      
      line2_ = getDefaultInstance().getLine2();
    }
    /**
     * <pre>
     * What to put in line2.
     * </pre>
     *
     * <code>optional string line2 = 2;</code>
     */
    private void setLine2Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      line2_ = value.toStringUtf8();
    }

    public static final int MINUTES_FIELD_NUMBER = 3;
    private java.lang.String minutes_;
    /**
     * <pre>
     * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
     * </pre>
     *
     * <code>optional string minutes = 3;</code>
     */
    public java.lang.String getMinutes() {
      return minutes_;
    }
    /**
     * <pre>
     * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
     * </pre>
     *
     * <code>optional string minutes = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMinutesBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(minutes_);
    }
    /**
     * <pre>
     * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
     * </pre>
     *
     * <code>optional string minutes = 3;</code>
     */
    private void setMinutes(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      minutes_ = value;
    }
    /**
     * <pre>
     * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
     * </pre>
     *
     * <code>optional string minutes = 3;</code>
     */
    private void clearMinutes() {
      
      minutes_ = getDefaultInstance().getMinutes();
    }
    /**
     * <pre>
     * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
     * </pre>
     *
     * <code>optional string minutes = 3;</code>
     */
    private void setMinutesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      minutes_ = value.toStringUtf8();
    }

    public static final int SECONDS_FIELD_NUMBER = 4;
    private int seconds_;
    /**
     * <pre>
     * If realtime we include seconds to departure.
     * </pre>
     *
     * <code>optional int32 seconds = 4;</code>
     */
    public int getSeconds() {
      return seconds_;
    }
    /**
     * <pre>
     * If realtime we include seconds to departure.
     * </pre>
     *
     * <code>optional int32 seconds = 4;</code>
     */
    private void setSeconds(int value) {
      
      seconds_ = value;
    }
    /**
     * <pre>
     * If realtime we include seconds to departure.
     * </pre>
     *
     * <code>optional int32 seconds = 4;</code>
     */
    private void clearSeconds() {
      
      seconds_ = 0;
    }

    public static final int COLOR_FIELD_NUMBER = 5;
    private int color_;
    /**
     * <pre>
     * Color representing this departure.
     * </pre>
     *
     * <code>optional int32 color = 5;</code>
     */
    public int getColor() {
      return color_;
    }
    /**
     * <pre>
     * Color representing this departure.
     * </pre>
     *
     * <code>optional int32 color = 5;</code>
     */
    private void setColor(int value) {
      
      color_ = value;
    }
    /**
     * <pre>
     * Color representing this departure.
     * </pre>
     *
     * <code>optional int32 color = 5;</code>
     */
    private void clearColor() {
      
      color_ = 0;
    }

    public static final int TRAFFIC_TYPE_FIELD_NUMBER = 6;
    private int trafficType_;
    /**
     * <pre>
     * Traffic type for the line1 departure.
     * </pre>
     *
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
     */
    public int getTrafficTypeValue() {
      return trafficType_;
    }
    /**
     * <pre>
     * Traffic type for the line1 departure.
     * </pre>
     *
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
     */
    public se.locutus.proto.Ng.NgTrafficType getTrafficType() {
      se.locutus.proto.Ng.NgTrafficType result = se.locutus.proto.Ng.NgTrafficType.forNumber(trafficType_);
      return result == null ? se.locutus.proto.Ng.NgTrafficType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Traffic type for the line1 departure.
     * </pre>
     *
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
     */
    private void setTrafficTypeValue(int value) {
        trafficType_ = value;
    }
    /**
     * <pre>
     * Traffic type for the line1 departure.
     * </pre>
     *
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
     */
    private void setTrafficType(se.locutus.proto.Ng.NgTrafficType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      trafficType_ = value.getNumber();
    }
    /**
     * <pre>
     * Traffic type for the line1 departure.
     * </pre>
     *
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
     */
    private void clearTrafficType() {
      
      trafficType_ = 0;
    }

    public static final int IDLE_MESSAGE_FIELD_NUMBER = 7;
    private java.lang.String idleMessage_;
    /**
     * <pre>
     * What the widget should show when idle, at line 2.
     * </pre>
     *
     * <code>optional string idle_message = 7;</code>
     */
    public java.lang.String getIdleMessage() {
      return idleMessage_;
    }
    /**
     * <pre>
     * What the widget should show when idle, at line 2.
     * </pre>
     *
     * <code>optional string idle_message = 7;</code>
     */
    public com.google.protobuf.ByteString
        getIdleMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(idleMessage_);
    }
    /**
     * <pre>
     * What the widget should show when idle, at line 2.
     * </pre>
     *
     * <code>optional string idle_message = 7;</code>
     */
    private void setIdleMessage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      idleMessage_ = value;
    }
    /**
     * <pre>
     * What the widget should show when idle, at line 2.
     * </pre>
     *
     * <code>optional string idle_message = 7;</code>
     */
    private void clearIdleMessage() {
      
      idleMessage_ = getDefaultInstance().getIdleMessage();
    }
    /**
     * <pre>
     * What the widget should show when idle, at line 2.
     * </pre>
     *
     * <code>optional string idle_message = 7;</code>
     */
    private void setIdleMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      idleMessage_ = value.toStringUtf8();
    }

    public static final int URL_FIELD_NUMBER = 8;
    private java.lang.String url_;
    /**
     * <pre>
     * URL with information that opens when line2 is touched.
     * </pre>
     *
     * <code>optional string url = 8;</code>
     */
    public java.lang.String getUrl() {
      return url_;
    }
    /**
     * <pre>
     * URL with information that opens when line2 is touched.
     * </pre>
     *
     * <code>optional string url = 8;</code>
     */
    public com.google.protobuf.ByteString
        getUrlBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(url_);
    }
    /**
     * <pre>
     * URL with information that opens when line2 is touched.
     * </pre>
     *
     * <code>optional string url = 8;</code>
     */
    private void setUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      url_ = value;
    }
    /**
     * <pre>
     * URL with information that opens when line2 is touched.
     * </pre>
     *
     * <code>optional string url = 8;</code>
     */
    private void clearUrl() {
      
      url_ = getDefaultInstance().getUrl();
    }
    /**
     * <pre>
     * URL with information that opens when line2 is touched.
     * </pre>
     *
     * <code>optional string url = 8;</code>
     */
    private void setUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      url_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!line1_.isEmpty()) {
        output.writeString(1, getLine1());
      }
      if (!line2_.isEmpty()) {
        output.writeString(2, getLine2());
      }
      if (!minutes_.isEmpty()) {
        output.writeString(3, getMinutes());
      }
      if (seconds_ != 0) {
        output.writeInt32(4, seconds_);
      }
      if (color_ != 0) {
        output.writeInt32(5, color_);
      }
      if (trafficType_ != se.locutus.proto.Ng.NgTrafficType.UNKNOWN_TRAFFIC_TYPE.getNumber()) {
        output.writeEnum(6, trafficType_);
      }
      if (!idleMessage_.isEmpty()) {
        output.writeString(7, getIdleMessage());
      }
      if (!url_.isEmpty()) {
        output.writeString(8, getUrl());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!line1_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getLine1());
      }
      if (!line2_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getLine2());
      }
      if (!minutes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getMinutes());
      }
      if (seconds_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seconds_);
      }
      if (color_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, color_);
      }
      if (trafficType_ != se.locutus.proto.Ng.NgTrafficType.UNKNOWN_TRAFFIC_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, trafficType_);
      }
      if (!idleMessage_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getIdleMessage());
      }
      if (!url_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getUrl());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.WidgetLoadResponseData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.WidgetLoadResponseData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.WidgetLoadResponseData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.WidgetLoadResponseData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.WidgetLoadResponseData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.WidgetLoadResponseData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.WidgetLoadResponseData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.WidgetLoadResponseData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.WidgetLoadResponseData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.WidgetLoadResponseData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.WidgetLoadResponseData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Response message suitable to put in the widget.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.WidgetLoadResponseData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.WidgetLoadResponseData, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.WidgetLoadResponseData)
        se.locutus.proto.Ng.WidgetLoadResponseDataOrBuilder {
      // Construct using se.locutus.proto.Ng.WidgetLoadResponseData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * What to put in line1.
       * </pre>
       *
       * <code>optional string line1 = 1;</code>
       */
      public java.lang.String getLine1() {
        return instance.getLine1();
      }
      /**
       * <pre>
       * What to put in line1.
       * </pre>
       *
       * <code>optional string line1 = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLine1Bytes() {
        return instance.getLine1Bytes();
      }
      /**
       * <pre>
       * What to put in line1.
       * </pre>
       *
       * <code>optional string line1 = 1;</code>
       */
      public Builder setLine1(
          java.lang.String value) {
        copyOnWrite();
        instance.setLine1(value);
        return this;
      }
      /**
       * <pre>
       * What to put in line1.
       * </pre>
       *
       * <code>optional string line1 = 1;</code>
       */
      public Builder clearLine1() {
        copyOnWrite();
        instance.clearLine1();
        return this;
      }
      /**
       * <pre>
       * What to put in line1.
       * </pre>
       *
       * <code>optional string line1 = 1;</code>
       */
      public Builder setLine1Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLine1Bytes(value);
        return this;
      }

      /**
       * <pre>
       * What to put in line2.
       * </pre>
       *
       * <code>optional string line2 = 2;</code>
       */
      public java.lang.String getLine2() {
        return instance.getLine2();
      }
      /**
       * <pre>
       * What to put in line2.
       * </pre>
       *
       * <code>optional string line2 = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLine2Bytes() {
        return instance.getLine2Bytes();
      }
      /**
       * <pre>
       * What to put in line2.
       * </pre>
       *
       * <code>optional string line2 = 2;</code>
       */
      public Builder setLine2(
          java.lang.String value) {
        copyOnWrite();
        instance.setLine2(value);
        return this;
      }
      /**
       * <pre>
       * What to put in line2.
       * </pre>
       *
       * <code>optional string line2 = 2;</code>
       */
      public Builder clearLine2() {
        copyOnWrite();
        instance.clearLine2();
        return this;
      }
      /**
       * <pre>
       * What to put in line2.
       * </pre>
       *
       * <code>optional string line2 = 2;</code>
       */
      public Builder setLine2Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLine2Bytes(value);
        return this;
      }

      /**
       * <pre>
       * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
       * </pre>
       *
       * <code>optional string minutes = 3;</code>
       */
      public java.lang.String getMinutes() {
        return instance.getMinutes();
      }
      /**
       * <pre>
       * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
       * </pre>
       *
       * <code>optional string minutes = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMinutesBytes() {
        return instance.getMinutesBytes();
      }
      /**
       * <pre>
       * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
       * </pre>
       *
       * <code>optional string minutes = 3;</code>
       */
      public Builder setMinutes(
          java.lang.String value) {
        copyOnWrite();
        instance.setMinutes(value);
        return this;
      }
      /**
       * <pre>
       * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
       * </pre>
       *
       * <code>optional string minutes = 3;</code>
       */
      public Builder clearMinutes() {
        copyOnWrite();
        instance.clearMinutes();
        return this;
      }
      /**
       * <pre>
       * Minutes in the form of "x min", might have a "." indicating data isn't realtime.
       * </pre>
       *
       * <code>optional string minutes = 3;</code>
       */
      public Builder setMinutesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMinutesBytes(value);
        return this;
      }

      /**
       * <pre>
       * If realtime we include seconds to departure.
       * </pre>
       *
       * <code>optional int32 seconds = 4;</code>
       */
      public int getSeconds() {
        return instance.getSeconds();
      }
      /**
       * <pre>
       * If realtime we include seconds to departure.
       * </pre>
       *
       * <code>optional int32 seconds = 4;</code>
       */
      public Builder setSeconds(int value) {
        copyOnWrite();
        instance.setSeconds(value);
        return this;
      }
      /**
       * <pre>
       * If realtime we include seconds to departure.
       * </pre>
       *
       * <code>optional int32 seconds = 4;</code>
       */
      public Builder clearSeconds() {
        copyOnWrite();
        instance.clearSeconds();
        return this;
      }

      /**
       * <pre>
       * Color representing this departure.
       * </pre>
       *
       * <code>optional int32 color = 5;</code>
       */
      public int getColor() {
        return instance.getColor();
      }
      /**
       * <pre>
       * Color representing this departure.
       * </pre>
       *
       * <code>optional int32 color = 5;</code>
       */
      public Builder setColor(int value) {
        copyOnWrite();
        instance.setColor(value);
        return this;
      }
      /**
       * <pre>
       * Color representing this departure.
       * </pre>
       *
       * <code>optional int32 color = 5;</code>
       */
      public Builder clearColor() {
        copyOnWrite();
        instance.clearColor();
        return this;
      }

      /**
       * <pre>
       * Traffic type for the line1 departure.
       * </pre>
       *
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
       */
      public int getTrafficTypeValue() {
        return instance.getTrafficTypeValue();
      }
      /**
       * <pre>
       * Traffic type for the line1 departure.
       * </pre>
       *
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
       */
      public Builder setTrafficTypeValue(int value) {
        copyOnWrite();
        instance.setTrafficTypeValue(value);
        return this;
      }
      /**
       * <pre>
       * Traffic type for the line1 departure.
       * </pre>
       *
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
       */
      public se.locutus.proto.Ng.NgTrafficType getTrafficType() {
        return instance.getTrafficType();
      }
      /**
       * <pre>
       * Traffic type for the line1 departure.
       * </pre>
       *
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
       */
      public Builder setTrafficType(se.locutus.proto.Ng.NgTrafficType value) {
        copyOnWrite();
        instance.setTrafficType(value);
        return this;
      }
      /**
       * <pre>
       * Traffic type for the line1 departure.
       * </pre>
       *
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 6;</code>
       */
      public Builder clearTrafficType() {
        copyOnWrite();
        instance.clearTrafficType();
        return this;
      }

      /**
       * <pre>
       * What the widget should show when idle, at line 2.
       * </pre>
       *
       * <code>optional string idle_message = 7;</code>
       */
      public java.lang.String getIdleMessage() {
        return instance.getIdleMessage();
      }
      /**
       * <pre>
       * What the widget should show when idle, at line 2.
       * </pre>
       *
       * <code>optional string idle_message = 7;</code>
       */
      public com.google.protobuf.ByteString
          getIdleMessageBytes() {
        return instance.getIdleMessageBytes();
      }
      /**
       * <pre>
       * What the widget should show when idle, at line 2.
       * </pre>
       *
       * <code>optional string idle_message = 7;</code>
       */
      public Builder setIdleMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setIdleMessage(value);
        return this;
      }
      /**
       * <pre>
       * What the widget should show when idle, at line 2.
       * </pre>
       *
       * <code>optional string idle_message = 7;</code>
       */
      public Builder clearIdleMessage() {
        copyOnWrite();
        instance.clearIdleMessage();
        return this;
      }
      /**
       * <pre>
       * What the widget should show when idle, at line 2.
       * </pre>
       *
       * <code>optional string idle_message = 7;</code>
       */
      public Builder setIdleMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIdleMessageBytes(value);
        return this;
      }

      /**
       * <pre>
       * URL with information that opens when line2 is touched.
       * </pre>
       *
       * <code>optional string url = 8;</code>
       */
      public java.lang.String getUrl() {
        return instance.getUrl();
      }
      /**
       * <pre>
       * URL with information that opens when line2 is touched.
       * </pre>
       *
       * <code>optional string url = 8;</code>
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        return instance.getUrlBytes();
      }
      /**
       * <pre>
       * URL with information that opens when line2 is touched.
       * </pre>
       *
       * <code>optional string url = 8;</code>
       */
      public Builder setUrl(
          java.lang.String value) {
        copyOnWrite();
        instance.setUrl(value);
        return this;
      }
      /**
       * <pre>
       * URL with information that opens when line2 is touched.
       * </pre>
       *
       * <code>optional string url = 8;</code>
       */
      public Builder clearUrl() {
        copyOnWrite();
        instance.clearUrl();
        return this;
      }
      /**
       * <pre>
       * URL with information that opens when line2 is touched.
       * </pre>
       *
       * <code>optional string url = 8;</code>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUrlBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.WidgetLoadResponseData)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.WidgetLoadResponseData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.WidgetLoadResponseData other = (se.locutus.proto.Ng.WidgetLoadResponseData) arg1;
          line1_ = visitor.visitString(!line1_.isEmpty(), line1_,
              !other.line1_.isEmpty(), other.line1_);
          line2_ = visitor.visitString(!line2_.isEmpty(), line2_,
              !other.line2_.isEmpty(), other.line2_);
          minutes_ = visitor.visitString(!minutes_.isEmpty(), minutes_,
              !other.minutes_.isEmpty(), other.minutes_);
          seconds_ = visitor.visitInt(seconds_ != 0, seconds_,
              other.seconds_ != 0, other.seconds_);
          color_ = visitor.visitInt(color_ != 0, color_,
              other.color_ != 0, other.color_);
          trafficType_ = visitor.visitInt(trafficType_ != 0, trafficType_,    other.trafficType_ != 0, other.trafficType_);
          idleMessage_ = visitor.visitString(!idleMessage_.isEmpty(), idleMessage_,
              !other.idleMessage_.isEmpty(), other.idleMessage_);
          url_ = visitor.visitString(!url_.isEmpty(), url_,
              !other.url_.isEmpty(), other.url_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  line1_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  line2_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  minutes_ = s;
                  break;
                }
                case 32: {

                  seconds_ = input.readInt32();
                  break;
                }
                case 40: {

                  color_ = input.readInt32();
                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();

                  trafficType_ = rawValue;
                  break;
                }
                case 58: {
                  String s = input.readStringRequireUtf8();

                  idleMessage_ = s;
                  break;
                }
                case 66: {
                  String s = input.readStringRequireUtf8();

                  url_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.WidgetLoadResponseData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.WidgetLoadResponseData)
    private static final se.locutus.proto.Ng.WidgetLoadResponseData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WidgetLoadResponseData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.WidgetLoadResponseData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<WidgetLoadResponseData> PARSER;

    public static com.google.protobuf.Parser<WidgetLoadResponseData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LoadErrorResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.LoadErrorResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
     */
    int getErrorTypeValue();
    /**
     * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
     */
    se.locutus.proto.Ng.ErrorType getErrorType();

    /**
     * <code>optional string message = 2;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code se.locutus.proto.LoadErrorResponse}
   */
  public  static final class LoadErrorResponse extends
      com.google.protobuf.GeneratedMessageLite<
          LoadErrorResponse, LoadErrorResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.LoadErrorResponse)
      LoadErrorResponseOrBuilder {
    private LoadErrorResponse() {
      message_ = "";
    }
    public static final int ERROR_TYPE_FIELD_NUMBER = 1;
    private int errorType_;
    /**
     * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
     */
    public int getErrorTypeValue() {
      return errorType_;
    }
    /**
     * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
     */
    public se.locutus.proto.Ng.ErrorType getErrorType() {
      se.locutus.proto.Ng.ErrorType result = se.locutus.proto.Ng.ErrorType.forNumber(errorType_);
      return result == null ? se.locutus.proto.Ng.ErrorType.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
     */
    private void setErrorTypeValue(int value) {
        errorType_ = value;
    }
    /**
     * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
     */
    private void setErrorType(se.locutus.proto.Ng.ErrorType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      errorType_ = value.getNumber();
    }
    /**
     * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
     */
    private void clearErrorType() {
      
      errorType_ = 0;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.String message_;
    /**
     * <code>optional string message = 2;</code>
     */
    public java.lang.String getMessage() {
      return message_;
    }
    /**
     * <code>optional string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(message_);
    }
    /**
     * <code>optional string message = 2;</code>
     */
    private void setMessage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      message_ = value;
    }
    /**
     * <code>optional string message = 2;</code>
     */
    private void clearMessage() {
      
      message_ = getDefaultInstance().getMessage();
    }
    /**
     * <code>optional string message = 2;</code>
     */
    private void setMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      message_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (errorType_ != se.locutus.proto.Ng.ErrorType.UNKNOWN_ERROR.getNumber()) {
        output.writeEnum(1, errorType_);
      }
      if (!message_.isEmpty()) {
        output.writeString(2, getMessage());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (errorType_ != se.locutus.proto.Ng.ErrorType.UNKNOWN_ERROR.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, errorType_);
      }
      if (!message_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMessage());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.LoadErrorResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.LoadErrorResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.LoadErrorResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.LoadErrorResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.LoadErrorResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.LoadErrorResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.LoadErrorResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.LoadErrorResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.LoadErrorResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.LoadErrorResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.LoadErrorResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code se.locutus.proto.LoadErrorResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.LoadErrorResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.LoadErrorResponse)
        se.locutus.proto.Ng.LoadErrorResponseOrBuilder {
      // Construct using se.locutus.proto.Ng.LoadErrorResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
       */
      public int getErrorTypeValue() {
        return instance.getErrorTypeValue();
      }
      /**
       * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
       */
      public Builder setErrorTypeValue(int value) {
        copyOnWrite();
        instance.setErrorTypeValue(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
       */
      public se.locutus.proto.Ng.ErrorType getErrorType() {
        return instance.getErrorType();
      }
      /**
       * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
       */
      public Builder setErrorType(se.locutus.proto.Ng.ErrorType value) {
        copyOnWrite();
        instance.setErrorType(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.ErrorType error_type = 1;</code>
       */
      public Builder clearErrorType() {
        copyOnWrite();
        instance.clearErrorType();
        return this;
      }

      /**
       * <code>optional string message = 2;</code>
       */
      public java.lang.String getMessage() {
        return instance.getMessage();
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        return instance.getMessageBytes();
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setMessage(value);
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder clearMessage() {
        copyOnWrite();
        instance.clearMessage();
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMessageBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.LoadErrorResponse)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.LoadErrorResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.LoadErrorResponse other = (se.locutus.proto.Ng.LoadErrorResponse) arg1;
          errorType_ = visitor.visitInt(errorType_ != 0, errorType_,    other.errorType_ != 0, other.errorType_);
          message_ = visitor.visitString(!message_.isEmpty(), message_,
              !other.message_.isEmpty(), other.message_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  errorType_ = rawValue;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  message_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.LoadErrorResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.LoadErrorResponse)
    private static final se.locutus.proto.Ng.LoadErrorResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LoadErrorResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.LoadErrorResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LoadErrorResponse> PARSER;

    public static com.google.protobuf.Parser<LoadErrorResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AllDepaturesResponseDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.AllDepaturesResponseData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Details about this stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
     */
    boolean hasStopData();
    /**
     * <pre>
     * Details about this stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
     */
    se.locutus.proto.Ng.StopData getStopData();

    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    java.util.List<se.locutus.proto.Ng.DepartureData> 
        getDepatureDataList();
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    se.locutus.proto.Ng.DepartureData getDepatureData(int index);
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    int getDepatureDataCount();
  }
  /**
   * <pre>
   * A response that contains all the data we have about a stop.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.AllDepaturesResponseData}
   */
  public  static final class AllDepaturesResponseData extends
      com.google.protobuf.GeneratedMessageLite<
          AllDepaturesResponseData, AllDepaturesResponseData.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.AllDepaturesResponseData)
      AllDepaturesResponseDataOrBuilder {
    private AllDepaturesResponseData() {
      depatureData_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int STOP_DATA_FIELD_NUMBER = 1;
    private se.locutus.proto.Ng.StopData stopData_;
    /**
     * <pre>
     * Details about this stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
     */
    public boolean hasStopData() {
      return stopData_ != null;
    }
    /**
     * <pre>
     * Details about this stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
     */
    public se.locutus.proto.Ng.StopData getStopData() {
      return stopData_ == null ? se.locutus.proto.Ng.StopData.getDefaultInstance() : stopData_;
    }
    /**
     * <pre>
     * Details about this stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
     */
    private void setStopData(se.locutus.proto.Ng.StopData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      stopData_ = value;
      
      }
    /**
     * <pre>
     * Details about this stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
     */
    private void setStopData(
        se.locutus.proto.Ng.StopData.Builder builderForValue) {
      stopData_ = builderForValue.build();
      
    }
    /**
     * <pre>
     * Details about this stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
     */
    private void mergeStopData(se.locutus.proto.Ng.StopData value) {
      if (stopData_ != null &&
          stopData_ != se.locutus.proto.Ng.StopData.getDefaultInstance()) {
        stopData_ =
          se.locutus.proto.Ng.StopData.newBuilder(stopData_).mergeFrom(value).buildPartial();
      } else {
        stopData_ = value;
      }
      
    }
    /**
     * <pre>
     * Details about this stop.
     * </pre>
     *
     * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
     */
    private void clearStopData() {  stopData_ = null;
      
    }

    public static final int DEPATURE_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<se.locutus.proto.Ng.DepartureData> depatureData_;
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    public java.util.List<se.locutus.proto.Ng.DepartureData> getDepatureDataList() {
      return depatureData_;
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    public java.util.List<? extends se.locutus.proto.Ng.DepartureDataOrBuilder> 
        getDepatureDataOrBuilderList() {
      return depatureData_;
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    public int getDepatureDataCount() {
      return depatureData_.size();
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    public se.locutus.proto.Ng.DepartureData getDepatureData(int index) {
      return depatureData_.get(index);
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    public se.locutus.proto.Ng.DepartureDataOrBuilder getDepatureDataOrBuilder(
        int index) {
      return depatureData_.get(index);
    }
    private void ensureDepatureDataIsMutable() {
      if (!depatureData_.isModifiable()) {
        depatureData_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(depatureData_);
       }
    }

    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    private void setDepatureData(
        int index, se.locutus.proto.Ng.DepartureData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDepatureDataIsMutable();
      depatureData_.set(index, value);
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    private void setDepatureData(
        int index, se.locutus.proto.Ng.DepartureData.Builder builderForValue) {
      ensureDepatureDataIsMutable();
      depatureData_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    private void addDepatureData(se.locutus.proto.Ng.DepartureData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDepatureDataIsMutable();
      depatureData_.add(value);
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    private void addDepatureData(
        int index, se.locutus.proto.Ng.DepartureData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDepatureDataIsMutable();
      depatureData_.add(index, value);
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    private void addDepatureData(
        se.locutus.proto.Ng.DepartureData.Builder builderForValue) {
      ensureDepatureDataIsMutable();
      depatureData_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    private void addDepatureData(
        int index, se.locutus.proto.Ng.DepartureData.Builder builderForValue) {
      ensureDepatureDataIsMutable();
      depatureData_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    private void addAllDepatureData(
        java.lang.Iterable<? extends se.locutus.proto.Ng.DepartureData> values) {
      ensureDepatureDataIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, depatureData_);
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    private void clearDepatureData() {
      depatureData_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Details about all the known departure from this stop.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
     */
    private void removeDepatureData(int index) {
      ensureDepatureDataIsMutable();
      depatureData_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (stopData_ != null) {
        output.writeMessage(1, getStopData());
      }
      for (int i = 0; i < depatureData_.size(); i++) {
        output.writeMessage(2, depatureData_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (stopData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStopData());
      }
      for (int i = 0; i < depatureData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, depatureData_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.AllDepaturesResponseData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.AllDepaturesResponseData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.AllDepaturesResponseData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.AllDepaturesResponseData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.AllDepaturesResponseData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.AllDepaturesResponseData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.AllDepaturesResponseData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.AllDepaturesResponseData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.AllDepaturesResponseData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.AllDepaturesResponseData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.AllDepaturesResponseData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A response that contains all the data we have about a stop.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.AllDepaturesResponseData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.AllDepaturesResponseData, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.AllDepaturesResponseData)
        se.locutus.proto.Ng.AllDepaturesResponseDataOrBuilder {
      // Construct using se.locutus.proto.Ng.AllDepaturesResponseData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Details about this stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
       */
      public boolean hasStopData() {
        return instance.hasStopData();
      }
      /**
       * <pre>
       * Details about this stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
       */
      public se.locutus.proto.Ng.StopData getStopData() {
        return instance.getStopData();
      }
      /**
       * <pre>
       * Details about this stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
       */
      public Builder setStopData(se.locutus.proto.Ng.StopData value) {
        copyOnWrite();
        instance.setStopData(value);
        return this;
        }
      /**
       * <pre>
       * Details about this stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
       */
      public Builder setStopData(
          se.locutus.proto.Ng.StopData.Builder builderForValue) {
        copyOnWrite();
        instance.setStopData(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Details about this stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
       */
      public Builder mergeStopData(se.locutus.proto.Ng.StopData value) {
        copyOnWrite();
        instance.mergeStopData(value);
        return this;
      }
      /**
       * <pre>
       * Details about this stop.
       * </pre>
       *
       * <code>optional .se.locutus.proto.StopData stop_data = 1;</code>
       */
      public Builder clearStopData() {  copyOnWrite();
        instance.clearStopData();
        return this;
      }

      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public java.util.List<se.locutus.proto.Ng.DepartureData> getDepatureDataList() {
        return java.util.Collections.unmodifiableList(
            instance.getDepatureDataList());
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public int getDepatureDataCount() {
        return instance.getDepatureDataCount();
      }/**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public se.locutus.proto.Ng.DepartureData getDepatureData(int index) {
        return instance.getDepatureData(index);
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public Builder setDepatureData(
          int index, se.locutus.proto.Ng.DepartureData value) {
        copyOnWrite();
        instance.setDepatureData(index, value);
        return this;
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public Builder setDepatureData(
          int index, se.locutus.proto.Ng.DepartureData.Builder builderForValue) {
        copyOnWrite();
        instance.setDepatureData(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public Builder addDepatureData(se.locutus.proto.Ng.DepartureData value) {
        copyOnWrite();
        instance.addDepatureData(value);
        return this;
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public Builder addDepatureData(
          int index, se.locutus.proto.Ng.DepartureData value) {
        copyOnWrite();
        instance.addDepatureData(index, value);
        return this;
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public Builder addDepatureData(
          se.locutus.proto.Ng.DepartureData.Builder builderForValue) {
        copyOnWrite();
        instance.addDepatureData(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public Builder addDepatureData(
          int index, se.locutus.proto.Ng.DepartureData.Builder builderForValue) {
        copyOnWrite();
        instance.addDepatureData(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public Builder addAllDepatureData(
          java.lang.Iterable<? extends se.locutus.proto.Ng.DepartureData> values) {
        copyOnWrite();
        instance.addAllDepatureData(values);
        return this;
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public Builder clearDepatureData() {
        copyOnWrite();
        instance.clearDepatureData();
        return this;
      }
      /**
       * <pre>
       * Details about all the known departure from this stop.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.DepartureData depature_data = 2;</code>
       */
      public Builder removeDepatureData(int index) {
        copyOnWrite();
        instance.removeDepatureData(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.AllDepaturesResponseData)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.AllDepaturesResponseData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          depatureData_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.AllDepaturesResponseData other = (se.locutus.proto.Ng.AllDepaturesResponseData) arg1;
          stopData_ = visitor.visitMessage(stopData_, other.stopData_);
          depatureData_= visitor.visitList(depatureData_, other.depatureData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  se.locutus.proto.Ng.StopData.Builder subBuilder = null;
                  if (stopData_ != null) {
                    subBuilder = stopData_.toBuilder();
                  }
                  stopData_ = input.readMessage(se.locutus.proto.Ng.StopData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(stopData_);
                    stopData_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  if (!depatureData_.isModifiable()) {
                    depatureData_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(depatureData_);
                  }
                  depatureData_.add(
                      input.readMessage(se.locutus.proto.Ng.DepartureData.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.AllDepaturesResponseData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.AllDepaturesResponseData)
    private static final se.locutus.proto.Ng.AllDepaturesResponseData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AllDepaturesResponseData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.AllDepaturesResponseData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AllDepaturesResponseData> PARSER;

    public static com.google.protobuf.Parser<AllDepaturesResponseData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DepartureDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.DepartureData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * String representing this unique departure, such as "11 Akalla".
     * </pre>
     *
     * <code>optional string canonical_name = 1;</code>
     */
    java.lang.String getCanonicalName();
    /**
     * <pre>
     * String representing this unique departure, such as "11 Akalla".
     * </pre>
     *
     * <code>optional string canonical_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getCanonicalNameBytes();

    /**
     * <pre>
     * The color we think this depature has.
     * </pre>
     *
     * <code>optional int32 color = 2;</code>
     */
    int getColor();

    /**
     * <pre>
     * Same as color if null.
     * </pre>
     *
     * <code>optional int32 group_of_line_id = 3;</code>
     */
    int getGroupOfLineId();

    /**
     * <pre>
     * Direction, subway usually have two directions per stop.
     * </pre>
     *
     * <code>optional int32 direction_id = 4;</code>
     */
    int getDirectionId();

    /**
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
     */
    int getTrafficTypeValue();
    /**
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
     */
    se.locutus.proto.Ng.NgTrafficType getTrafficType();
  }
  /**
   * <pre>
   * Data about depature from a stop.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.DepartureData}
   */
  public  static final class DepartureData extends
      com.google.protobuf.GeneratedMessageLite<
          DepartureData, DepartureData.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.DepartureData)
      DepartureDataOrBuilder {
    private DepartureData() {
      canonicalName_ = "";
    }
    public static final int CANONICAL_NAME_FIELD_NUMBER = 1;
    private java.lang.String canonicalName_;
    /**
     * <pre>
     * String representing this unique departure, such as "11 Akalla".
     * </pre>
     *
     * <code>optional string canonical_name = 1;</code>
     */
    public java.lang.String getCanonicalName() {
      return canonicalName_;
    }
    /**
     * <pre>
     * String representing this unique departure, such as "11 Akalla".
     * </pre>
     *
     * <code>optional string canonical_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCanonicalNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(canonicalName_);
    }
    /**
     * <pre>
     * String representing this unique departure, such as "11 Akalla".
     * </pre>
     *
     * <code>optional string canonical_name = 1;</code>
     */
    private void setCanonicalName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      canonicalName_ = value;
    }
    /**
     * <pre>
     * String representing this unique departure, such as "11 Akalla".
     * </pre>
     *
     * <code>optional string canonical_name = 1;</code>
     */
    private void clearCanonicalName() {
      
      canonicalName_ = getDefaultInstance().getCanonicalName();
    }
    /**
     * <pre>
     * String representing this unique departure, such as "11 Akalla".
     * </pre>
     *
     * <code>optional string canonical_name = 1;</code>
     */
    private void setCanonicalNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      canonicalName_ = value.toStringUtf8();
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_;
    /**
     * <pre>
     * The color we think this depature has.
     * </pre>
     *
     * <code>optional int32 color = 2;</code>
     */
    public int getColor() {
      return color_;
    }
    /**
     * <pre>
     * The color we think this depature has.
     * </pre>
     *
     * <code>optional int32 color = 2;</code>
     */
    private void setColor(int value) {
      
      color_ = value;
    }
    /**
     * <pre>
     * The color we think this depature has.
     * </pre>
     *
     * <code>optional int32 color = 2;</code>
     */
    private void clearColor() {
      
      color_ = 0;
    }

    public static final int GROUP_OF_LINE_ID_FIELD_NUMBER = 3;
    private int groupOfLineId_;
    /**
     * <pre>
     * Same as color if null.
     * </pre>
     *
     * <code>optional int32 group_of_line_id = 3;</code>
     */
    public int getGroupOfLineId() {
      return groupOfLineId_;
    }
    /**
     * <pre>
     * Same as color if null.
     * </pre>
     *
     * <code>optional int32 group_of_line_id = 3;</code>
     */
    private void setGroupOfLineId(int value) {
      
      groupOfLineId_ = value;
    }
    /**
     * <pre>
     * Same as color if null.
     * </pre>
     *
     * <code>optional int32 group_of_line_id = 3;</code>
     */
    private void clearGroupOfLineId() {
      
      groupOfLineId_ = 0;
    }

    public static final int DIRECTION_ID_FIELD_NUMBER = 4;
    private int directionId_;
    /**
     * <pre>
     * Direction, subway usually have two directions per stop.
     * </pre>
     *
     * <code>optional int32 direction_id = 4;</code>
     */
    public int getDirectionId() {
      return directionId_;
    }
    /**
     * <pre>
     * Direction, subway usually have two directions per stop.
     * </pre>
     *
     * <code>optional int32 direction_id = 4;</code>
     */
    private void setDirectionId(int value) {
      
      directionId_ = value;
    }
    /**
     * <pre>
     * Direction, subway usually have two directions per stop.
     * </pre>
     *
     * <code>optional int32 direction_id = 4;</code>
     */
    private void clearDirectionId() {
      
      directionId_ = 0;
    }

    public static final int TRAFFIC_TYPE_FIELD_NUMBER = 5;
    private int trafficType_;
    /**
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
     */
    public int getTrafficTypeValue() {
      return trafficType_;
    }
    /**
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
     */
    public se.locutus.proto.Ng.NgTrafficType getTrafficType() {
      se.locutus.proto.Ng.NgTrafficType result = se.locutus.proto.Ng.NgTrafficType.forNumber(trafficType_);
      return result == null ? se.locutus.proto.Ng.NgTrafficType.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
     */
    private void setTrafficTypeValue(int value) {
        trafficType_ = value;
    }
    /**
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
     */
    private void setTrafficType(se.locutus.proto.Ng.NgTrafficType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      trafficType_ = value.getNumber();
    }
    /**
     * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
     */
    private void clearTrafficType() {
      
      trafficType_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!canonicalName_.isEmpty()) {
        output.writeString(1, getCanonicalName());
      }
      if (color_ != 0) {
        output.writeInt32(2, color_);
      }
      if (groupOfLineId_ != 0) {
        output.writeInt32(3, groupOfLineId_);
      }
      if (directionId_ != 0) {
        output.writeInt32(4, directionId_);
      }
      if (trafficType_ != se.locutus.proto.Ng.NgTrafficType.UNKNOWN_TRAFFIC_TYPE.getNumber()) {
        output.writeEnum(5, trafficType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!canonicalName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getCanonicalName());
      }
      if (color_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, color_);
      }
      if (groupOfLineId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, groupOfLineId_);
      }
      if (directionId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, directionId_);
      }
      if (trafficType_ != se.locutus.proto.Ng.NgTrafficType.UNKNOWN_TRAFFIC_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, trafficType_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.DepartureData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.DepartureData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.DepartureData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.DepartureData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.DepartureData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.DepartureData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.DepartureData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.DepartureData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.DepartureData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.DepartureData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.DepartureData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Data about depature from a stop.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.DepartureData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.DepartureData, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.DepartureData)
        se.locutus.proto.Ng.DepartureDataOrBuilder {
      // Construct using se.locutus.proto.Ng.DepartureData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * String representing this unique departure, such as "11 Akalla".
       * </pre>
       *
       * <code>optional string canonical_name = 1;</code>
       */
      public java.lang.String getCanonicalName() {
        return instance.getCanonicalName();
      }
      /**
       * <pre>
       * String representing this unique departure, such as "11 Akalla".
       * </pre>
       *
       * <code>optional string canonical_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCanonicalNameBytes() {
        return instance.getCanonicalNameBytes();
      }
      /**
       * <pre>
       * String representing this unique departure, such as "11 Akalla".
       * </pre>
       *
       * <code>optional string canonical_name = 1;</code>
       */
      public Builder setCanonicalName(
          java.lang.String value) {
        copyOnWrite();
        instance.setCanonicalName(value);
        return this;
      }
      /**
       * <pre>
       * String representing this unique departure, such as "11 Akalla".
       * </pre>
       *
       * <code>optional string canonical_name = 1;</code>
       */
      public Builder clearCanonicalName() {
        copyOnWrite();
        instance.clearCanonicalName();
        return this;
      }
      /**
       * <pre>
       * String representing this unique departure, such as "11 Akalla".
       * </pre>
       *
       * <code>optional string canonical_name = 1;</code>
       */
      public Builder setCanonicalNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCanonicalNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * The color we think this depature has.
       * </pre>
       *
       * <code>optional int32 color = 2;</code>
       */
      public int getColor() {
        return instance.getColor();
      }
      /**
       * <pre>
       * The color we think this depature has.
       * </pre>
       *
       * <code>optional int32 color = 2;</code>
       */
      public Builder setColor(int value) {
        copyOnWrite();
        instance.setColor(value);
        return this;
      }
      /**
       * <pre>
       * The color we think this depature has.
       * </pre>
       *
       * <code>optional int32 color = 2;</code>
       */
      public Builder clearColor() {
        copyOnWrite();
        instance.clearColor();
        return this;
      }

      /**
       * <pre>
       * Same as color if null.
       * </pre>
       *
       * <code>optional int32 group_of_line_id = 3;</code>
       */
      public int getGroupOfLineId() {
        return instance.getGroupOfLineId();
      }
      /**
       * <pre>
       * Same as color if null.
       * </pre>
       *
       * <code>optional int32 group_of_line_id = 3;</code>
       */
      public Builder setGroupOfLineId(int value) {
        copyOnWrite();
        instance.setGroupOfLineId(value);
        return this;
      }
      /**
       * <pre>
       * Same as color if null.
       * </pre>
       *
       * <code>optional int32 group_of_line_id = 3;</code>
       */
      public Builder clearGroupOfLineId() {
        copyOnWrite();
        instance.clearGroupOfLineId();
        return this;
      }

      /**
       * <pre>
       * Direction, subway usually have two directions per stop.
       * </pre>
       *
       * <code>optional int32 direction_id = 4;</code>
       */
      public int getDirectionId() {
        return instance.getDirectionId();
      }
      /**
       * <pre>
       * Direction, subway usually have two directions per stop.
       * </pre>
       *
       * <code>optional int32 direction_id = 4;</code>
       */
      public Builder setDirectionId(int value) {
        copyOnWrite();
        instance.setDirectionId(value);
        return this;
      }
      /**
       * <pre>
       * Direction, subway usually have two directions per stop.
       * </pre>
       *
       * <code>optional int32 direction_id = 4;</code>
       */
      public Builder clearDirectionId() {
        copyOnWrite();
        instance.clearDirectionId();
        return this;
      }

      /**
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
       */
      public int getTrafficTypeValue() {
        return instance.getTrafficTypeValue();
      }
      /**
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
       */
      public Builder setTrafficTypeValue(int value) {
        copyOnWrite();
        instance.setTrafficTypeValue(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
       */
      public se.locutus.proto.Ng.NgTrafficType getTrafficType() {
        return instance.getTrafficType();
      }
      /**
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
       */
      public Builder setTrafficType(se.locutus.proto.Ng.NgTrafficType value) {
        copyOnWrite();
        instance.setTrafficType(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.NgTrafficType traffic_type = 5;</code>
       */
      public Builder clearTrafficType() {
        copyOnWrite();
        instance.clearTrafficType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.DepartureData)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.DepartureData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.DepartureData other = (se.locutus.proto.Ng.DepartureData) arg1;
          canonicalName_ = visitor.visitString(!canonicalName_.isEmpty(), canonicalName_,
              !other.canonicalName_.isEmpty(), other.canonicalName_);
          color_ = visitor.visitInt(color_ != 0, color_,
              other.color_ != 0, other.color_);
          groupOfLineId_ = visitor.visitInt(groupOfLineId_ != 0, groupOfLineId_,
              other.groupOfLineId_ != 0, other.groupOfLineId_);
          directionId_ = visitor.visitInt(directionId_ != 0, directionId_,
              other.directionId_ != 0, other.directionId_);
          trafficType_ = visitor.visitInt(trafficType_ != 0, trafficType_,    other.trafficType_ != 0, other.trafficType_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  canonicalName_ = s;
                  break;
                }
                case 16: {

                  color_ = input.readInt32();
                  break;
                }
                case 24: {

                  groupOfLineId_ = input.readInt32();
                  break;
                }
                case 32: {

                  directionId_ = input.readInt32();
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();

                  trafficType_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.DepartureData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.DepartureData)
    private static final se.locutus.proto.Ng.DepartureData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DepartureData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.DepartureData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DepartureData> PARSER;

    public static com.google.protobuf.Parser<DepartureData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StopDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.StopData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Unique siteId.
     * </pre>
     *
     * <code>optional int64 site_id = 1;</code>
     */
    long getSiteId();

    /**
     * <pre>
     * Unique canonical name, such as "Kista (Stockholm)".
     * </pre>
     *
     * <code>optional string canonical_name = 2;</code>
     */
    java.lang.String getCanonicalName();
    /**
     * <pre>
     * Unique canonical name, such as "Kista (Stockholm)".
     * </pre>
     *
     * <code>optional string canonical_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getCanonicalNameBytes();

    /**
     * <pre>
     * Short display name, such as "Kista".
     * </pre>
     *
     * <code>optional string display_name = 3;</code>
     */
    java.lang.String getDisplayName();
    /**
     * <pre>
     * Short display name, such as "Kista".
     * </pre>
     *
     * <code>optional string display_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getDisplayNameBytes();

    /**
     * <pre>
     * Latitude of the stop.
     * </pre>
     *
     * <code>optional double lat = 4;</code>
     */
    double getLat();

    /**
     * <pre>
     * Longitude of the stop.
     * </pre>
     *
     * <code>optional double lng = 5;</code>
     */
    double getLng();
  }
  /**
   * <pre>
   * Data about a stop.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.StopData}
   */
  public  static final class StopData extends
      com.google.protobuf.GeneratedMessageLite<
          StopData, StopData.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.StopData)
      StopDataOrBuilder {
    private StopData() {
      canonicalName_ = "";
      displayName_ = "";
    }
    public static final int SITE_ID_FIELD_NUMBER = 1;
    private long siteId_;
    /**
     * <pre>
     * Unique siteId.
     * </pre>
     *
     * <code>optional int64 site_id = 1;</code>
     */
    public long getSiteId() {
      return siteId_;
    }
    /**
     * <pre>
     * Unique siteId.
     * </pre>
     *
     * <code>optional int64 site_id = 1;</code>
     */
    private void setSiteId(long value) {
      
      siteId_ = value;
    }
    /**
     * <pre>
     * Unique siteId.
     * </pre>
     *
     * <code>optional int64 site_id = 1;</code>
     */
    private void clearSiteId() {
      
      siteId_ = 0L;
    }

    public static final int CANONICAL_NAME_FIELD_NUMBER = 2;
    private java.lang.String canonicalName_;
    /**
     * <pre>
     * Unique canonical name, such as "Kista (Stockholm)".
     * </pre>
     *
     * <code>optional string canonical_name = 2;</code>
     */
    public java.lang.String getCanonicalName() {
      return canonicalName_;
    }
    /**
     * <pre>
     * Unique canonical name, such as "Kista (Stockholm)".
     * </pre>
     *
     * <code>optional string canonical_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCanonicalNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(canonicalName_);
    }
    /**
     * <pre>
     * Unique canonical name, such as "Kista (Stockholm)".
     * </pre>
     *
     * <code>optional string canonical_name = 2;</code>
     */
    private void setCanonicalName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      canonicalName_ = value;
    }
    /**
     * <pre>
     * Unique canonical name, such as "Kista (Stockholm)".
     * </pre>
     *
     * <code>optional string canonical_name = 2;</code>
     */
    private void clearCanonicalName() {
      
      canonicalName_ = getDefaultInstance().getCanonicalName();
    }
    /**
     * <pre>
     * Unique canonical name, such as "Kista (Stockholm)".
     * </pre>
     *
     * <code>optional string canonical_name = 2;</code>
     */
    private void setCanonicalNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      canonicalName_ = value.toStringUtf8();
    }

    public static final int DISPLAY_NAME_FIELD_NUMBER = 3;
    private java.lang.String displayName_;
    /**
     * <pre>
     * Short display name, such as "Kista".
     * </pre>
     *
     * <code>optional string display_name = 3;</code>
     */
    public java.lang.String getDisplayName() {
      return displayName_;
    }
    /**
     * <pre>
     * Short display name, such as "Kista".
     * </pre>
     *
     * <code>optional string display_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(displayName_);
    }
    /**
     * <pre>
     * Short display name, such as "Kista".
     * </pre>
     *
     * <code>optional string display_name = 3;</code>
     */
    private void setDisplayName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      displayName_ = value;
    }
    /**
     * <pre>
     * Short display name, such as "Kista".
     * </pre>
     *
     * <code>optional string display_name = 3;</code>
     */
    private void clearDisplayName() {
      
      displayName_ = getDefaultInstance().getDisplayName();
    }
    /**
     * <pre>
     * Short display name, such as "Kista".
     * </pre>
     *
     * <code>optional string display_name = 3;</code>
     */
    private void setDisplayNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      displayName_ = value.toStringUtf8();
    }

    public static final int LAT_FIELD_NUMBER = 4;
    private double lat_;
    /**
     * <pre>
     * Latitude of the stop.
     * </pre>
     *
     * <code>optional double lat = 4;</code>
     */
    public double getLat() {
      return lat_;
    }
    /**
     * <pre>
     * Latitude of the stop.
     * </pre>
     *
     * <code>optional double lat = 4;</code>
     */
    private void setLat(double value) {
      
      lat_ = value;
    }
    /**
     * <pre>
     * Latitude of the stop.
     * </pre>
     *
     * <code>optional double lat = 4;</code>
     */
    private void clearLat() {
      
      lat_ = 0D;
    }

    public static final int LNG_FIELD_NUMBER = 5;
    private double lng_;
    /**
     * <pre>
     * Longitude of the stop.
     * </pre>
     *
     * <code>optional double lng = 5;</code>
     */
    public double getLng() {
      return lng_;
    }
    /**
     * <pre>
     * Longitude of the stop.
     * </pre>
     *
     * <code>optional double lng = 5;</code>
     */
    private void setLng(double value) {
      
      lng_ = value;
    }
    /**
     * <pre>
     * Longitude of the stop.
     * </pre>
     *
     * <code>optional double lng = 5;</code>
     */
    private void clearLng() {
      
      lng_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (siteId_ != 0L) {
        output.writeInt64(1, siteId_);
      }
      if (!canonicalName_.isEmpty()) {
        output.writeString(2, getCanonicalName());
      }
      if (!displayName_.isEmpty()) {
        output.writeString(3, getDisplayName());
      }
      if (lat_ != 0D) {
        output.writeDouble(4, lat_);
      }
      if (lng_ != 0D) {
        output.writeDouble(5, lng_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (siteId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, siteId_);
      }
      if (!canonicalName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getCanonicalName());
      }
      if (!displayName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDisplayName());
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lat_);
      }
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, lng_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.StopData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.StopData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.StopData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StopData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StopData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StopData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.StopData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Data about a stop.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.StopData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.StopData, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.StopData)
        se.locutus.proto.Ng.StopDataOrBuilder {
      // Construct using se.locutus.proto.Ng.StopData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Unique siteId.
       * </pre>
       *
       * <code>optional int64 site_id = 1;</code>
       */
      public long getSiteId() {
        return instance.getSiteId();
      }
      /**
       * <pre>
       * Unique siteId.
       * </pre>
       *
       * <code>optional int64 site_id = 1;</code>
       */
      public Builder setSiteId(long value) {
        copyOnWrite();
        instance.setSiteId(value);
        return this;
      }
      /**
       * <pre>
       * Unique siteId.
       * </pre>
       *
       * <code>optional int64 site_id = 1;</code>
       */
      public Builder clearSiteId() {
        copyOnWrite();
        instance.clearSiteId();
        return this;
      }

      /**
       * <pre>
       * Unique canonical name, such as "Kista (Stockholm)".
       * </pre>
       *
       * <code>optional string canonical_name = 2;</code>
       */
      public java.lang.String getCanonicalName() {
        return instance.getCanonicalName();
      }
      /**
       * <pre>
       * Unique canonical name, such as "Kista (Stockholm)".
       * </pre>
       *
       * <code>optional string canonical_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCanonicalNameBytes() {
        return instance.getCanonicalNameBytes();
      }
      /**
       * <pre>
       * Unique canonical name, such as "Kista (Stockholm)".
       * </pre>
       *
       * <code>optional string canonical_name = 2;</code>
       */
      public Builder setCanonicalName(
          java.lang.String value) {
        copyOnWrite();
        instance.setCanonicalName(value);
        return this;
      }
      /**
       * <pre>
       * Unique canonical name, such as "Kista (Stockholm)".
       * </pre>
       *
       * <code>optional string canonical_name = 2;</code>
       */
      public Builder clearCanonicalName() {
        copyOnWrite();
        instance.clearCanonicalName();
        return this;
      }
      /**
       * <pre>
       * Unique canonical name, such as "Kista (Stockholm)".
       * </pre>
       *
       * <code>optional string canonical_name = 2;</code>
       */
      public Builder setCanonicalNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCanonicalNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * Short display name, such as "Kista".
       * </pre>
       *
       * <code>optional string display_name = 3;</code>
       */
      public java.lang.String getDisplayName() {
        return instance.getDisplayName();
      }
      /**
       * <pre>
       * Short display name, such as "Kista".
       * </pre>
       *
       * <code>optional string display_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDisplayNameBytes() {
        return instance.getDisplayNameBytes();
      }
      /**
       * <pre>
       * Short display name, such as "Kista".
       * </pre>
       *
       * <code>optional string display_name = 3;</code>
       */
      public Builder setDisplayName(
          java.lang.String value) {
        copyOnWrite();
        instance.setDisplayName(value);
        return this;
      }
      /**
       * <pre>
       * Short display name, such as "Kista".
       * </pre>
       *
       * <code>optional string display_name = 3;</code>
       */
      public Builder clearDisplayName() {
        copyOnWrite();
        instance.clearDisplayName();
        return this;
      }
      /**
       * <pre>
       * Short display name, such as "Kista".
       * </pre>
       *
       * <code>optional string display_name = 3;</code>
       */
      public Builder setDisplayNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDisplayNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * Latitude of the stop.
       * </pre>
       *
       * <code>optional double lat = 4;</code>
       */
      public double getLat() {
        return instance.getLat();
      }
      /**
       * <pre>
       * Latitude of the stop.
       * </pre>
       *
       * <code>optional double lat = 4;</code>
       */
      public Builder setLat(double value) {
        copyOnWrite();
        instance.setLat(value);
        return this;
      }
      /**
       * <pre>
       * Latitude of the stop.
       * </pre>
       *
       * <code>optional double lat = 4;</code>
       */
      public Builder clearLat() {
        copyOnWrite();
        instance.clearLat();
        return this;
      }

      /**
       * <pre>
       * Longitude of the stop.
       * </pre>
       *
       * <code>optional double lng = 5;</code>
       */
      public double getLng() {
        return instance.getLng();
      }
      /**
       * <pre>
       * Longitude of the stop.
       * </pre>
       *
       * <code>optional double lng = 5;</code>
       */
      public Builder setLng(double value) {
        copyOnWrite();
        instance.setLng(value);
        return this;
      }
      /**
       * <pre>
       * Longitude of the stop.
       * </pre>
       *
       * <code>optional double lng = 5;</code>
       */
      public Builder clearLng() {
        copyOnWrite();
        instance.clearLng();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.StopData)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.StopData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.StopData other = (se.locutus.proto.Ng.StopData) arg1;
          siteId_ = visitor.visitLong(siteId_ != 0L, siteId_,
              other.siteId_ != 0L, other.siteId_);
          canonicalName_ = visitor.visitString(!canonicalName_.isEmpty(), canonicalName_,
              !other.canonicalName_.isEmpty(), other.canonicalName_);
          displayName_ = visitor.visitString(!displayName_.isEmpty(), displayName_,
              !other.displayName_.isEmpty(), other.displayName_);
          lat_ = visitor.visitDouble(lat_ != 0D, lat_,
              other.lat_ != 0D, other.lat_);
          lng_ = visitor.visitDouble(lng_ != 0D, lng_,
              other.lng_ != 0D, other.lng_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  siteId_ = input.readInt64();
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  canonicalName_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  displayName_ = s;
                  break;
                }
                case 33: {

                  lat_ = input.readDouble();
                  break;
                }
                case 41: {

                  lng_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.StopData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.StopData)
    private static final se.locutus.proto.Ng.StopData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StopData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.StopData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StopData> PARSER;

    public static com.google.protobuf.Parser<StopData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PingRequestResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.PingRequestResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Client should send us a local timestamp.
     * </pre>
     *
     * <code>optional int64 local_timestamp_millis = 1;</code>
     */
    long getLocalTimestampMillis();
  }
  /**
   * <pre>
   * Message for both request and response of a ping.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.PingRequestResponse}
   */
  public  static final class PingRequestResponse extends
      com.google.protobuf.GeneratedMessageLite<
          PingRequestResponse, PingRequestResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.PingRequestResponse)
      PingRequestResponseOrBuilder {
    private PingRequestResponse() {
    }
    public static final int LOCAL_TIMESTAMP_MILLIS_FIELD_NUMBER = 1;
    private long localTimestampMillis_;
    /**
     * <pre>
     * Client should send us a local timestamp.
     * </pre>
     *
     * <code>optional int64 local_timestamp_millis = 1;</code>
     */
    public long getLocalTimestampMillis() {
      return localTimestampMillis_;
    }
    /**
     * <pre>
     * Client should send us a local timestamp.
     * </pre>
     *
     * <code>optional int64 local_timestamp_millis = 1;</code>
     */
    private void setLocalTimestampMillis(long value) {
      
      localTimestampMillis_ = value;
    }
    /**
     * <pre>
     * Client should send us a local timestamp.
     * </pre>
     *
     * <code>optional int64 local_timestamp_millis = 1;</code>
     */
    private void clearLocalTimestampMillis() {
      
      localTimestampMillis_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (localTimestampMillis_ != 0L) {
        output.writeInt64(1, localTimestampMillis_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (localTimestampMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, localTimestampMillis_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.PingRequestResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.PingRequestResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.PingRequestResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.PingRequestResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.PingRequestResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.PingRequestResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.PingRequestResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.PingRequestResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.PingRequestResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.PingRequestResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.PingRequestResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Message for both request and response of a ping.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.PingRequestResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.PingRequestResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.PingRequestResponse)
        se.locutus.proto.Ng.PingRequestResponseOrBuilder {
      // Construct using se.locutus.proto.Ng.PingRequestResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Client should send us a local timestamp.
       * </pre>
       *
       * <code>optional int64 local_timestamp_millis = 1;</code>
       */
      public long getLocalTimestampMillis() {
        return instance.getLocalTimestampMillis();
      }
      /**
       * <pre>
       * Client should send us a local timestamp.
       * </pre>
       *
       * <code>optional int64 local_timestamp_millis = 1;</code>
       */
      public Builder setLocalTimestampMillis(long value) {
        copyOnWrite();
        instance.setLocalTimestampMillis(value);
        return this;
      }
      /**
       * <pre>
       * Client should send us a local timestamp.
       * </pre>
       *
       * <code>optional int64 local_timestamp_millis = 1;</code>
       */
      public Builder clearLocalTimestampMillis() {
        copyOnWrite();
        instance.clearLocalTimestampMillis();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.PingRequestResponse)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.PingRequestResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.PingRequestResponse other = (se.locutus.proto.Ng.PingRequestResponse) arg1;
          localTimestampMillis_ = visitor.visitLong(localTimestampMillis_ != 0L, localTimestampMillis_,
              other.localTimestampMillis_ != 0L, other.localTimestampMillis_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  localTimestampMillis_ = input.readInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.PingRequestResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.PingRequestResponse)
    private static final se.locutus.proto.Ng.PingRequestResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PingRequestResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.PingRequestResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PingRequestResponse> PARSER;

    public static com.google.protobuf.Parser<PingRequestResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LineFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.LineFilter)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Group of line, such as the red subway line.
     * </pre>
     *
     * <code>optional int32 group_of_line_id = 1;</code>
     */
    int getGroupOfLineId();

    /**
     * <pre>
     * Direction of this line we're interested in.
     * </pre>
     *
     * <code>optional int32 direction_id = 2;</code>
     */
    int getDirectionId();
  }
  /**
   * <pre>
   * A filter based on line and direction.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.LineFilter}
   */
  public  static final class LineFilter extends
      com.google.protobuf.GeneratedMessageLite<
          LineFilter, LineFilter.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.LineFilter)
      LineFilterOrBuilder {
    private LineFilter() {
    }
    public static final int GROUP_OF_LINE_ID_FIELD_NUMBER = 1;
    private int groupOfLineId_;
    /**
     * <pre>
     * Group of line, such as the red subway line.
     * </pre>
     *
     * <code>optional int32 group_of_line_id = 1;</code>
     */
    public int getGroupOfLineId() {
      return groupOfLineId_;
    }
    /**
     * <pre>
     * Group of line, such as the red subway line.
     * </pre>
     *
     * <code>optional int32 group_of_line_id = 1;</code>
     */
    private void setGroupOfLineId(int value) {
      
      groupOfLineId_ = value;
    }
    /**
     * <pre>
     * Group of line, such as the red subway line.
     * </pre>
     *
     * <code>optional int32 group_of_line_id = 1;</code>
     */
    private void clearGroupOfLineId() {
      
      groupOfLineId_ = 0;
    }

    public static final int DIRECTION_ID_FIELD_NUMBER = 2;
    private int directionId_;
    /**
     * <pre>
     * Direction of this line we're interested in.
     * </pre>
     *
     * <code>optional int32 direction_id = 2;</code>
     */
    public int getDirectionId() {
      return directionId_;
    }
    /**
     * <pre>
     * Direction of this line we're interested in.
     * </pre>
     *
     * <code>optional int32 direction_id = 2;</code>
     */
    private void setDirectionId(int value) {
      
      directionId_ = value;
    }
    /**
     * <pre>
     * Direction of this line we're interested in.
     * </pre>
     *
     * <code>optional int32 direction_id = 2;</code>
     */
    private void clearDirectionId() {
      
      directionId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (groupOfLineId_ != 0) {
        output.writeInt32(1, groupOfLineId_);
      }
      if (directionId_ != 0) {
        output.writeInt32(2, directionId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (groupOfLineId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, groupOfLineId_);
      }
      if (directionId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, directionId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.LineFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.LineFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.LineFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.LineFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.LineFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.LineFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.LineFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.LineFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.LineFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.LineFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.LineFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A filter based on line and direction.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.LineFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.LineFilter, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.LineFilter)
        se.locutus.proto.Ng.LineFilterOrBuilder {
      // Construct using se.locutus.proto.Ng.LineFilter.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Group of line, such as the red subway line.
       * </pre>
       *
       * <code>optional int32 group_of_line_id = 1;</code>
       */
      public int getGroupOfLineId() {
        return instance.getGroupOfLineId();
      }
      /**
       * <pre>
       * Group of line, such as the red subway line.
       * </pre>
       *
       * <code>optional int32 group_of_line_id = 1;</code>
       */
      public Builder setGroupOfLineId(int value) {
        copyOnWrite();
        instance.setGroupOfLineId(value);
        return this;
      }
      /**
       * <pre>
       * Group of line, such as the red subway line.
       * </pre>
       *
       * <code>optional int32 group_of_line_id = 1;</code>
       */
      public Builder clearGroupOfLineId() {
        copyOnWrite();
        instance.clearGroupOfLineId();
        return this;
      }

      /**
       * <pre>
       * Direction of this line we're interested in.
       * </pre>
       *
       * <code>optional int32 direction_id = 2;</code>
       */
      public int getDirectionId() {
        return instance.getDirectionId();
      }
      /**
       * <pre>
       * Direction of this line we're interested in.
       * </pre>
       *
       * <code>optional int32 direction_id = 2;</code>
       */
      public Builder setDirectionId(int value) {
        copyOnWrite();
        instance.setDirectionId(value);
        return this;
      }
      /**
       * <pre>
       * Direction of this line we're interested in.
       * </pre>
       *
       * <code>optional int32 direction_id = 2;</code>
       */
      public Builder clearDirectionId() {
        copyOnWrite();
        instance.clearDirectionId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.LineFilter)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.LineFilter();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.LineFilter other = (se.locutus.proto.Ng.LineFilter) arg1;
          groupOfLineId_ = visitor.visitInt(groupOfLineId_ != 0, groupOfLineId_,
              other.groupOfLineId_ != 0, other.groupOfLineId_);
          directionId_ = visitor.visitInt(directionId_ != 0, directionId_,
              other.directionId_ != 0, other.directionId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  groupOfLineId_ = input.readInt32();
                  break;
                }
                case 16: {

                  directionId_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.LineFilter.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.LineFilter)
    private static final se.locutus.proto.Ng.LineFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LineFilter();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.LineFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LineFilter> PARSER;

    public static com.google.protobuf.Parser<LineFilter> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DeparturesFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.DeparturesFilter)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated string departures = 1;</code>
     */
    java.util.List<String>
        getDeparturesList();
    /**
     * <code>repeated string departures = 1;</code>
     */
    int getDeparturesCount();
    /**
     * <code>repeated string departures = 1;</code>
     */
    java.lang.String getDepartures(int index);
    /**
     * <code>repeated string departures = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeparturesBytes(int index);
  }
  /**
   * <pre>
   * Specific departures filter.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.DeparturesFilter}
   */
  public  static final class DeparturesFilter extends
      com.google.protobuf.GeneratedMessageLite<
          DeparturesFilter, DeparturesFilter.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.DeparturesFilter)
      DeparturesFilterOrBuilder {
    private DeparturesFilter() {
      departures_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    public static final int DEPARTURES_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<String> departures_;
    /**
     * <code>repeated string departures = 1;</code>
     */
    public java.util.List<String> getDeparturesList() {
      return departures_;
    }
    /**
     * <code>repeated string departures = 1;</code>
     */
    public int getDeparturesCount() {
      return departures_.size();
    }
    /**
     * <code>repeated string departures = 1;</code>
     */
    public java.lang.String getDepartures(int index) {
      return departures_.get(index);
    }
    /**
     * <code>repeated string departures = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeparturesBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          departures_.get(index));
    }
    private void ensureDeparturesIsMutable() {
      if (!departures_.isModifiable()) {
        departures_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(departures_);
       }
    }
    /**
     * <code>repeated string departures = 1;</code>
     */
    private void setDepartures(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDeparturesIsMutable();
      departures_.set(index, value);
    }
    /**
     * <code>repeated string departures = 1;</code>
     */
    private void addDepartures(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDeparturesIsMutable();
      departures_.add(value);
    }
    /**
     * <code>repeated string departures = 1;</code>
     */
    private void addAllDepartures(
        java.lang.Iterable<java.lang.String> values) {
      ensureDeparturesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, departures_);
    }
    /**
     * <code>repeated string departures = 1;</code>
     */
    private void clearDepartures() {
      departures_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string departures = 1;</code>
     */
    private void addDeparturesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureDeparturesIsMutable();
      departures_.add(value.toStringUtf8());
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < departures_.size(); i++) {
        output.writeString(1, departures_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < departures_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(departures_.get(i));
        }
        size += dataSize;
        size += 1 * getDeparturesList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.DeparturesFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.DeparturesFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.DeparturesFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.DeparturesFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.DeparturesFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.DeparturesFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.DeparturesFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.DeparturesFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.DeparturesFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.DeparturesFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.DeparturesFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Specific departures filter.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.DeparturesFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.DeparturesFilter, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.DeparturesFilter)
        se.locutus.proto.Ng.DeparturesFilterOrBuilder {
      // Construct using se.locutus.proto.Ng.DeparturesFilter.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated string departures = 1;</code>
       */
      public java.util.List<String>
          getDeparturesList() {
        return java.util.Collections.unmodifiableList(
            instance.getDeparturesList());
      }
      /**
       * <code>repeated string departures = 1;</code>
       */
      public int getDeparturesCount() {
        return instance.getDeparturesCount();
      }
      /**
       * <code>repeated string departures = 1;</code>
       */
      public java.lang.String getDepartures(int index) {
        return instance.getDepartures(index);
      }
      /**
       * <code>repeated string departures = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeparturesBytes(int index) {
        return instance.getDeparturesBytes(index);
      }
      /**
       * <code>repeated string departures = 1;</code>
       */
      public Builder setDepartures(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setDepartures(index, value);
        return this;
      }
      /**
       * <code>repeated string departures = 1;</code>
       */
      public Builder addDepartures(
          java.lang.String value) {
        copyOnWrite();
        instance.addDepartures(value);
        return this;
      }
      /**
       * <code>repeated string departures = 1;</code>
       */
      public Builder addAllDepartures(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllDepartures(values);
        return this;
      }
      /**
       * <code>repeated string departures = 1;</code>
       */
      public Builder clearDepartures() {
        copyOnWrite();
        instance.clearDepartures();
        return this;
      }
      /**
       * <code>repeated string departures = 1;</code>
       */
      public Builder addDeparturesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addDeparturesBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.DeparturesFilter)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.DeparturesFilter();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          departures_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.DeparturesFilter other = (se.locutus.proto.Ng.DeparturesFilter) arg1;
          departures_= visitor.visitList(departures_, other.departures_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();
                  if (!departures_.isModifiable()) {
                    departures_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(departures_);
                  }
                  departures_.add(s);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.DeparturesFilter.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.DeparturesFilter)
    private static final se.locutus.proto.Ng.DeparturesFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DeparturesFilter();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.DeparturesFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DeparturesFilter> PARSER;

    public static com.google.protobuf.Parser<DeparturesFilter> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WidgetConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.WidgetConfiguration)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Android widgetId.
     * </pre>
     *
     * <code>optional int64 widget_id = 1;</code>
     */
    long getWidgetId();

    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    java.util.List<se.locutus.proto.Ng.StopConfiguration> 
        getStopConfigurationList();
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    se.locutus.proto.Ng.StopConfiguration getStopConfiguration(int index);
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    int getStopConfigurationCount();
  }
  /**
   * <pre>
   * Configuration for a single widget.
   * </pre>
   *
   * Protobuf type {@code se.locutus.proto.WidgetConfiguration}
   */
  public  static final class WidgetConfiguration extends
      com.google.protobuf.GeneratedMessageLite<
          WidgetConfiguration, WidgetConfiguration.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.WidgetConfiguration)
      WidgetConfigurationOrBuilder {
    private WidgetConfiguration() {
      stopConfiguration_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int WIDGET_ID_FIELD_NUMBER = 1;
    private long widgetId_;
    /**
     * <pre>
     * Android widgetId.
     * </pre>
     *
     * <code>optional int64 widget_id = 1;</code>
     */
    public long getWidgetId() {
      return widgetId_;
    }
    /**
     * <pre>
     * Android widgetId.
     * </pre>
     *
     * <code>optional int64 widget_id = 1;</code>
     */
    private void setWidgetId(long value) {
      
      widgetId_ = value;
    }
    /**
     * <pre>
     * Android widgetId.
     * </pre>
     *
     * <code>optional int64 widget_id = 1;</code>
     */
    private void clearWidgetId() {
      
      widgetId_ = 0L;
    }

    public static final int STOP_CONFIGURATION_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<se.locutus.proto.Ng.StopConfiguration> stopConfiguration_;
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    public java.util.List<se.locutus.proto.Ng.StopConfiguration> getStopConfigurationList() {
      return stopConfiguration_;
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    public java.util.List<? extends se.locutus.proto.Ng.StopConfigurationOrBuilder> 
        getStopConfigurationOrBuilderList() {
      return stopConfiguration_;
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    public int getStopConfigurationCount() {
      return stopConfiguration_.size();
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    public se.locutus.proto.Ng.StopConfiguration getStopConfiguration(int index) {
      return stopConfiguration_.get(index);
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    public se.locutus.proto.Ng.StopConfigurationOrBuilder getStopConfigurationOrBuilder(
        int index) {
      return stopConfiguration_.get(index);
    }
    private void ensureStopConfigurationIsMutable() {
      if (!stopConfiguration_.isModifiable()) {
        stopConfiguration_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(stopConfiguration_);
       }
    }

    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    private void setStopConfiguration(
        int index, se.locutus.proto.Ng.StopConfiguration value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStopConfigurationIsMutable();
      stopConfiguration_.set(index, value);
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    private void setStopConfiguration(
        int index, se.locutus.proto.Ng.StopConfiguration.Builder builderForValue) {
      ensureStopConfigurationIsMutable();
      stopConfiguration_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    private void addStopConfiguration(se.locutus.proto.Ng.StopConfiguration value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStopConfigurationIsMutable();
      stopConfiguration_.add(value);
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    private void addStopConfiguration(
        int index, se.locutus.proto.Ng.StopConfiguration value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStopConfigurationIsMutable();
      stopConfiguration_.add(index, value);
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    private void addStopConfiguration(
        se.locutus.proto.Ng.StopConfiguration.Builder builderForValue) {
      ensureStopConfigurationIsMutable();
      stopConfiguration_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    private void addStopConfiguration(
        int index, se.locutus.proto.Ng.StopConfiguration.Builder builderForValue) {
      ensureStopConfigurationIsMutable();
      stopConfiguration_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    private void addAllStopConfiguration(
        java.lang.Iterable<? extends se.locutus.proto.Ng.StopConfiguration> values) {
      ensureStopConfigurationIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stopConfiguration_);
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    private void clearStopConfiguration() {
      stopConfiguration_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The stops we've configured at this widget.
     * </pre>
     *
     * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
     */
    private void removeStopConfiguration(int index) {
      ensureStopConfigurationIsMutable();
      stopConfiguration_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (widgetId_ != 0L) {
        output.writeInt64(1, widgetId_);
      }
      for (int i = 0; i < stopConfiguration_.size(); i++) {
        output.writeMessage(2, stopConfiguration_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (widgetId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, widgetId_);
      }
      for (int i = 0; i < stopConfiguration_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, stopConfiguration_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.WidgetConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.WidgetConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.WidgetConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.WidgetConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.WidgetConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.WidgetConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.WidgetConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.WidgetConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.WidgetConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.WidgetConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.WidgetConfiguration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Configuration for a single widget.
     * </pre>
     *
     * Protobuf type {@code se.locutus.proto.WidgetConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.WidgetConfiguration, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.WidgetConfiguration)
        se.locutus.proto.Ng.WidgetConfigurationOrBuilder {
      // Construct using se.locutus.proto.Ng.WidgetConfiguration.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Android widgetId.
       * </pre>
       *
       * <code>optional int64 widget_id = 1;</code>
       */
      public long getWidgetId() {
        return instance.getWidgetId();
      }
      /**
       * <pre>
       * Android widgetId.
       * </pre>
       *
       * <code>optional int64 widget_id = 1;</code>
       */
      public Builder setWidgetId(long value) {
        copyOnWrite();
        instance.setWidgetId(value);
        return this;
      }
      /**
       * <pre>
       * Android widgetId.
       * </pre>
       *
       * <code>optional int64 widget_id = 1;</code>
       */
      public Builder clearWidgetId() {
        copyOnWrite();
        instance.clearWidgetId();
        return this;
      }

      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public java.util.List<se.locutus.proto.Ng.StopConfiguration> getStopConfigurationList() {
        return java.util.Collections.unmodifiableList(
            instance.getStopConfigurationList());
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public int getStopConfigurationCount() {
        return instance.getStopConfigurationCount();
      }/**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public se.locutus.proto.Ng.StopConfiguration getStopConfiguration(int index) {
        return instance.getStopConfiguration(index);
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public Builder setStopConfiguration(
          int index, se.locutus.proto.Ng.StopConfiguration value) {
        copyOnWrite();
        instance.setStopConfiguration(index, value);
        return this;
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public Builder setStopConfiguration(
          int index, se.locutus.proto.Ng.StopConfiguration.Builder builderForValue) {
        copyOnWrite();
        instance.setStopConfiguration(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public Builder addStopConfiguration(se.locutus.proto.Ng.StopConfiguration value) {
        copyOnWrite();
        instance.addStopConfiguration(value);
        return this;
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public Builder addStopConfiguration(
          int index, se.locutus.proto.Ng.StopConfiguration value) {
        copyOnWrite();
        instance.addStopConfiguration(index, value);
        return this;
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public Builder addStopConfiguration(
          se.locutus.proto.Ng.StopConfiguration.Builder builderForValue) {
        copyOnWrite();
        instance.addStopConfiguration(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public Builder addStopConfiguration(
          int index, se.locutus.proto.Ng.StopConfiguration.Builder builderForValue) {
        copyOnWrite();
        instance.addStopConfiguration(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public Builder addAllStopConfiguration(
          java.lang.Iterable<? extends se.locutus.proto.Ng.StopConfiguration> values) {
        copyOnWrite();
        instance.addAllStopConfiguration(values);
        return this;
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public Builder clearStopConfiguration() {
        copyOnWrite();
        instance.clearStopConfiguration();
        return this;
      }
      /**
       * <pre>
       * The stops we've configured at this widget.
       * </pre>
       *
       * <code>repeated .se.locutus.proto.StopConfiguration stop_configuration = 2;</code>
       */
      public Builder removeStopConfiguration(int index) {
        copyOnWrite();
        instance.removeStopConfiguration(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.WidgetConfiguration)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.WidgetConfiguration();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          stopConfiguration_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.WidgetConfiguration other = (se.locutus.proto.Ng.WidgetConfiguration) arg1;
          widgetId_ = visitor.visitLong(widgetId_ != 0L, widgetId_,
              other.widgetId_ != 0L, other.widgetId_);
          stopConfiguration_= visitor.visitList(stopConfiguration_, other.stopConfiguration_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  widgetId_ = input.readInt64();
                  break;
                }
                case 18: {
                  if (!stopConfiguration_.isModifiable()) {
                    stopConfiguration_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(stopConfiguration_);
                  }
                  stopConfiguration_.add(
                      input.readMessage(se.locutus.proto.Ng.StopConfiguration.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.WidgetConfiguration.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.WidgetConfiguration)
    private static final se.locutus.proto.Ng.WidgetConfiguration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WidgetConfiguration();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.WidgetConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<WidgetConfiguration> PARSER;

    public static com.google.protobuf.Parser<WidgetConfiguration> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StoredStopDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.StoredStopData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int64 site_id = 1;</code>
     */
    long getSiteId();

    /**
     * <code>optional string canonical_name = 2;</code>
     */
    java.lang.String getCanonicalName();
    /**
     * <code>optional string canonical_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getCanonicalNameBytes();

    /**
     * <code>optional string display_name = 3;</code>
     */
    java.lang.String getDisplayName();
    /**
     * <code>optional string display_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getDisplayNameBytes();

    /**
     * <code>optional double lat = 4;</code>
     */
    double getLat();

    /**
     * <code>optional double lng = 5;</code>
     */
    double getLng();
  }
  /**
   * Protobuf type {@code se.locutus.proto.StoredStopData}
   */
  public  static final class StoredStopData extends
      com.google.protobuf.GeneratedMessageLite<
          StoredStopData, StoredStopData.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.StoredStopData)
      StoredStopDataOrBuilder {
    private StoredStopData() {
      canonicalName_ = "";
      displayName_ = "";
    }
    public static final int SITE_ID_FIELD_NUMBER = 1;
    private long siteId_;
    /**
     * <code>optional int64 site_id = 1;</code>
     */
    public long getSiteId() {
      return siteId_;
    }
    /**
     * <code>optional int64 site_id = 1;</code>
     */
    private void setSiteId(long value) {
      
      siteId_ = value;
    }
    /**
     * <code>optional int64 site_id = 1;</code>
     */
    private void clearSiteId() {
      
      siteId_ = 0L;
    }

    public static final int CANONICAL_NAME_FIELD_NUMBER = 2;
    private java.lang.String canonicalName_;
    /**
     * <code>optional string canonical_name = 2;</code>
     */
    public java.lang.String getCanonicalName() {
      return canonicalName_;
    }
    /**
     * <code>optional string canonical_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCanonicalNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(canonicalName_);
    }
    /**
     * <code>optional string canonical_name = 2;</code>
     */
    private void setCanonicalName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      canonicalName_ = value;
    }
    /**
     * <code>optional string canonical_name = 2;</code>
     */
    private void clearCanonicalName() {
      
      canonicalName_ = getDefaultInstance().getCanonicalName();
    }
    /**
     * <code>optional string canonical_name = 2;</code>
     */
    private void setCanonicalNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      canonicalName_ = value.toStringUtf8();
    }

    public static final int DISPLAY_NAME_FIELD_NUMBER = 3;
    private java.lang.String displayName_;
    /**
     * <code>optional string display_name = 3;</code>
     */
    public java.lang.String getDisplayName() {
      return displayName_;
    }
    /**
     * <code>optional string display_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(displayName_);
    }
    /**
     * <code>optional string display_name = 3;</code>
     */
    private void setDisplayName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      displayName_ = value;
    }
    /**
     * <code>optional string display_name = 3;</code>
     */
    private void clearDisplayName() {
      
      displayName_ = getDefaultInstance().getDisplayName();
    }
    /**
     * <code>optional string display_name = 3;</code>
     */
    private void setDisplayNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      displayName_ = value.toStringUtf8();
    }

    public static final int LAT_FIELD_NUMBER = 4;
    private double lat_;
    /**
     * <code>optional double lat = 4;</code>
     */
    public double getLat() {
      return lat_;
    }
    /**
     * <code>optional double lat = 4;</code>
     */
    private void setLat(double value) {
      
      lat_ = value;
    }
    /**
     * <code>optional double lat = 4;</code>
     */
    private void clearLat() {
      
      lat_ = 0D;
    }

    public static final int LNG_FIELD_NUMBER = 5;
    private double lng_;
    /**
     * <code>optional double lng = 5;</code>
     */
    public double getLng() {
      return lng_;
    }
    /**
     * <code>optional double lng = 5;</code>
     */
    private void setLng(double value) {
      
      lng_ = value;
    }
    /**
     * <code>optional double lng = 5;</code>
     */
    private void clearLng() {
      
      lng_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (siteId_ != 0L) {
        output.writeInt64(1, siteId_);
      }
      if (!canonicalName_.isEmpty()) {
        output.writeString(2, getCanonicalName());
      }
      if (!displayName_.isEmpty()) {
        output.writeString(3, getDisplayName());
      }
      if (lat_ != 0D) {
        output.writeDouble(4, lat_);
      }
      if (lng_ != 0D) {
        output.writeDouble(5, lng_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (siteId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, siteId_);
      }
      if (!canonicalName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getCanonicalName());
      }
      if (!displayName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDisplayName());
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lat_);
      }
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, lng_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.StoredStopData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.StoredStopData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StoredStopData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.StoredStopData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StoredStopData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StoredStopData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StoredStopData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StoredStopData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StoredStopData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StoredStopData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.StoredStopData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code se.locutus.proto.StoredStopData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.StoredStopData, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.StoredStopData)
        se.locutus.proto.Ng.StoredStopDataOrBuilder {
      // Construct using se.locutus.proto.Ng.StoredStopData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int64 site_id = 1;</code>
       */
      public long getSiteId() {
        return instance.getSiteId();
      }
      /**
       * <code>optional int64 site_id = 1;</code>
       */
      public Builder setSiteId(long value) {
        copyOnWrite();
        instance.setSiteId(value);
        return this;
      }
      /**
       * <code>optional int64 site_id = 1;</code>
       */
      public Builder clearSiteId() {
        copyOnWrite();
        instance.clearSiteId();
        return this;
      }

      /**
       * <code>optional string canonical_name = 2;</code>
       */
      public java.lang.String getCanonicalName() {
        return instance.getCanonicalName();
      }
      /**
       * <code>optional string canonical_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCanonicalNameBytes() {
        return instance.getCanonicalNameBytes();
      }
      /**
       * <code>optional string canonical_name = 2;</code>
       */
      public Builder setCanonicalName(
          java.lang.String value) {
        copyOnWrite();
        instance.setCanonicalName(value);
        return this;
      }
      /**
       * <code>optional string canonical_name = 2;</code>
       */
      public Builder clearCanonicalName() {
        copyOnWrite();
        instance.clearCanonicalName();
        return this;
      }
      /**
       * <code>optional string canonical_name = 2;</code>
       */
      public Builder setCanonicalNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCanonicalNameBytes(value);
        return this;
      }

      /**
       * <code>optional string display_name = 3;</code>
       */
      public java.lang.String getDisplayName() {
        return instance.getDisplayName();
      }
      /**
       * <code>optional string display_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDisplayNameBytes() {
        return instance.getDisplayNameBytes();
      }
      /**
       * <code>optional string display_name = 3;</code>
       */
      public Builder setDisplayName(
          java.lang.String value) {
        copyOnWrite();
        instance.setDisplayName(value);
        return this;
      }
      /**
       * <code>optional string display_name = 3;</code>
       */
      public Builder clearDisplayName() {
        copyOnWrite();
        instance.clearDisplayName();
        return this;
      }
      /**
       * <code>optional string display_name = 3;</code>
       */
      public Builder setDisplayNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDisplayNameBytes(value);
        return this;
      }

      /**
       * <code>optional double lat = 4;</code>
       */
      public double getLat() {
        return instance.getLat();
      }
      /**
       * <code>optional double lat = 4;</code>
       */
      public Builder setLat(double value) {
        copyOnWrite();
        instance.setLat(value);
        return this;
      }
      /**
       * <code>optional double lat = 4;</code>
       */
      public Builder clearLat() {
        copyOnWrite();
        instance.clearLat();
        return this;
      }

      /**
       * <code>optional double lng = 5;</code>
       */
      public double getLng() {
        return instance.getLng();
      }
      /**
       * <code>optional double lng = 5;</code>
       */
      public Builder setLng(double value) {
        copyOnWrite();
        instance.setLng(value);
        return this;
      }
      /**
       * <code>optional double lng = 5;</code>
       */
      public Builder clearLng() {
        copyOnWrite();
        instance.clearLng();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.StoredStopData)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.StoredStopData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.StoredStopData other = (se.locutus.proto.Ng.StoredStopData) arg1;
          siteId_ = visitor.visitLong(siteId_ != 0L, siteId_,
              other.siteId_ != 0L, other.siteId_);
          canonicalName_ = visitor.visitString(!canonicalName_.isEmpty(), canonicalName_,
              !other.canonicalName_.isEmpty(), other.canonicalName_);
          displayName_ = visitor.visitString(!displayName_.isEmpty(), displayName_,
              !other.displayName_.isEmpty(), other.displayName_);
          lat_ = visitor.visitDouble(lat_ != 0D, lat_,
              other.lat_ != 0D, other.lat_);
          lng_ = visitor.visitDouble(lng_ != 0D, lng_,
              other.lng_ != 0D, other.lng_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  siteId_ = input.readInt64();
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  canonicalName_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  displayName_ = s;
                  break;
                }
                case 33: {

                  lat_ = input.readDouble();
                  break;
                }
                case 41: {

                  lng_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.StoredStopData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.StoredStopData)
    private static final se.locutus.proto.Ng.StoredStopData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StoredStopData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.StoredStopData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StoredStopData> PARSER;

    public static com.google.protobuf.Parser<StoredStopData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StopDataRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.StopDataRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int64 site_id = 1;</code>
     */
    long getSiteId();

    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    boolean hasDeparturesFilter();
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    se.locutus.proto.Ng.DeparturesFilter getDeparturesFilter();

    /**
     * <pre>
     * Give all the data for the step if empty.
     * </pre>
     *
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    boolean hasLineFilter();
    /**
     * <pre>
     * Give all the data for the step if empty.
     * </pre>
     *
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    se.locutus.proto.Ng.LineFilter getLineFilter();
  }
  /**
   * Protobuf type {@code se.locutus.proto.StopDataRequest}
   */
  public  static final class StopDataRequest extends
      com.google.protobuf.GeneratedMessageLite<
          StopDataRequest, StopDataRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.StopDataRequest)
      StopDataRequestOrBuilder {
    private StopDataRequest() {
    }
    public static final int SITE_ID_FIELD_NUMBER = 1;
    private long siteId_;
    /**
     * <code>optional int64 site_id = 1;</code>
     */
    public long getSiteId() {
      return siteId_;
    }
    /**
     * <code>optional int64 site_id = 1;</code>
     */
    private void setSiteId(long value) {
      
      siteId_ = value;
    }
    /**
     * <code>optional int64 site_id = 1;</code>
     */
    private void clearSiteId() {
      
      siteId_ = 0L;
    }

    public static final int DEPARTURES_FILTER_FIELD_NUMBER = 2;
    private se.locutus.proto.Ng.DeparturesFilter departuresFilter_;
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    public boolean hasDeparturesFilter() {
      return departuresFilter_ != null;
    }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    public se.locutus.proto.Ng.DeparturesFilter getDeparturesFilter() {
      return departuresFilter_ == null ? se.locutus.proto.Ng.DeparturesFilter.getDefaultInstance() : departuresFilter_;
    }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    private void setDeparturesFilter(se.locutus.proto.Ng.DeparturesFilter value) {
      if (value == null) {
        throw new NullPointerException();
      }
      departuresFilter_ = value;
      
      }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    private void setDeparturesFilter(
        se.locutus.proto.Ng.DeparturesFilter.Builder builderForValue) {
      departuresFilter_ = builderForValue.build();
      
    }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    private void mergeDeparturesFilter(se.locutus.proto.Ng.DeparturesFilter value) {
      if (departuresFilter_ != null &&
          departuresFilter_ != se.locutus.proto.Ng.DeparturesFilter.getDefaultInstance()) {
        departuresFilter_ =
          se.locutus.proto.Ng.DeparturesFilter.newBuilder(departuresFilter_).mergeFrom(value).buildPartial();
      } else {
        departuresFilter_ = value;
      }
      
    }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    private void clearDeparturesFilter() {  departuresFilter_ = null;
      
    }

    public static final int LINE_FILTER_FIELD_NUMBER = 3;
    private se.locutus.proto.Ng.LineFilter lineFilter_;
    /**
     * <pre>
     * Give all the data for the step if empty.
     * </pre>
     *
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    public boolean hasLineFilter() {
      return lineFilter_ != null;
    }
    /**
     * <pre>
     * Give all the data for the step if empty.
     * </pre>
     *
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    public se.locutus.proto.Ng.LineFilter getLineFilter() {
      return lineFilter_ == null ? se.locutus.proto.Ng.LineFilter.getDefaultInstance() : lineFilter_;
    }
    /**
     * <pre>
     * Give all the data for the step if empty.
     * </pre>
     *
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    private void setLineFilter(se.locutus.proto.Ng.LineFilter value) {
      if (value == null) {
        throw new NullPointerException();
      }
      lineFilter_ = value;
      
      }
    /**
     * <pre>
     * Give all the data for the step if empty.
     * </pre>
     *
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    private void setLineFilter(
        se.locutus.proto.Ng.LineFilter.Builder builderForValue) {
      lineFilter_ = builderForValue.build();
      
    }
    /**
     * <pre>
     * Give all the data for the step if empty.
     * </pre>
     *
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    private void mergeLineFilter(se.locutus.proto.Ng.LineFilter value) {
      if (lineFilter_ != null &&
          lineFilter_ != se.locutus.proto.Ng.LineFilter.getDefaultInstance()) {
        lineFilter_ =
          se.locutus.proto.Ng.LineFilter.newBuilder(lineFilter_).mergeFrom(value).buildPartial();
      } else {
        lineFilter_ = value;
      }
      
    }
    /**
     * <pre>
     * Give all the data for the step if empty.
     * </pre>
     *
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    private void clearLineFilter() {  lineFilter_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (siteId_ != 0L) {
        output.writeInt64(1, siteId_);
      }
      if (departuresFilter_ != null) {
        output.writeMessage(2, getDeparturesFilter());
      }
      if (lineFilter_ != null) {
        output.writeMessage(3, getLineFilter());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (siteId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, siteId_);
      }
      if (departuresFilter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDeparturesFilter());
      }
      if (lineFilter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLineFilter());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.StopDataRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.StopDataRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopDataRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.StopDataRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopDataRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StopDataRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopDataRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StopDataRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StopDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.StopDataRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code se.locutus.proto.StopDataRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.StopDataRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.StopDataRequest)
        se.locutus.proto.Ng.StopDataRequestOrBuilder {
      // Construct using se.locutus.proto.Ng.StopDataRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int64 site_id = 1;</code>
       */
      public long getSiteId() {
        return instance.getSiteId();
      }
      /**
       * <code>optional int64 site_id = 1;</code>
       */
      public Builder setSiteId(long value) {
        copyOnWrite();
        instance.setSiteId(value);
        return this;
      }
      /**
       * <code>optional int64 site_id = 1;</code>
       */
      public Builder clearSiteId() {
        copyOnWrite();
        instance.clearSiteId();
        return this;
      }

      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public boolean hasDeparturesFilter() {
        return instance.hasDeparturesFilter();
      }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public se.locutus.proto.Ng.DeparturesFilter getDeparturesFilter() {
        return instance.getDeparturesFilter();
      }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public Builder setDeparturesFilter(se.locutus.proto.Ng.DeparturesFilter value) {
        copyOnWrite();
        instance.setDeparturesFilter(value);
        return this;
        }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public Builder setDeparturesFilter(
          se.locutus.proto.Ng.DeparturesFilter.Builder builderForValue) {
        copyOnWrite();
        instance.setDeparturesFilter(builderForValue);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public Builder mergeDeparturesFilter(se.locutus.proto.Ng.DeparturesFilter value) {
        copyOnWrite();
        instance.mergeDeparturesFilter(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public Builder clearDeparturesFilter() {  copyOnWrite();
        instance.clearDeparturesFilter();
        return this;
      }

      /**
       * <pre>
       * Give all the data for the step if empty.
       * </pre>
       *
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public boolean hasLineFilter() {
        return instance.hasLineFilter();
      }
      /**
       * <pre>
       * Give all the data for the step if empty.
       * </pre>
       *
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public se.locutus.proto.Ng.LineFilter getLineFilter() {
        return instance.getLineFilter();
      }
      /**
       * <pre>
       * Give all the data for the step if empty.
       * </pre>
       *
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public Builder setLineFilter(se.locutus.proto.Ng.LineFilter value) {
        copyOnWrite();
        instance.setLineFilter(value);
        return this;
        }
      /**
       * <pre>
       * Give all the data for the step if empty.
       * </pre>
       *
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public Builder setLineFilter(
          se.locutus.proto.Ng.LineFilter.Builder builderForValue) {
        copyOnWrite();
        instance.setLineFilter(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Give all the data for the step if empty.
       * </pre>
       *
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public Builder mergeLineFilter(se.locutus.proto.Ng.LineFilter value) {
        copyOnWrite();
        instance.mergeLineFilter(value);
        return this;
      }
      /**
       * <pre>
       * Give all the data for the step if empty.
       * </pre>
       *
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public Builder clearLineFilter() {  copyOnWrite();
        instance.clearLineFilter();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.StopDataRequest)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.StopDataRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.StopDataRequest other = (se.locutus.proto.Ng.StopDataRequest) arg1;
          siteId_ = visitor.visitLong(siteId_ != 0L, siteId_,
              other.siteId_ != 0L, other.siteId_);
          departuresFilter_ = visitor.visitMessage(departuresFilter_, other.departuresFilter_);
          lineFilter_ = visitor.visitMessage(lineFilter_, other.lineFilter_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  siteId_ = input.readInt64();
                  break;
                }
                case 18: {
                  se.locutus.proto.Ng.DeparturesFilter.Builder subBuilder = null;
                  if (departuresFilter_ != null) {
                    subBuilder = departuresFilter_.toBuilder();
                  }
                  departuresFilter_ = input.readMessage(se.locutus.proto.Ng.DeparturesFilter.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(departuresFilter_);
                    departuresFilter_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  se.locutus.proto.Ng.LineFilter.Builder subBuilder = null;
                  if (lineFilter_ != null) {
                    subBuilder = lineFilter_.toBuilder();
                  }
                  lineFilter_ = input.readMessage(se.locutus.proto.Ng.LineFilter.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(lineFilter_);
                    lineFilter_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.StopDataRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.StopDataRequest)
    private static final se.locutus.proto.Ng.StopDataRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StopDataRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.StopDataRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StopDataRequest> PARSER;

    public static com.google.protobuf.Parser<StopDataRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ColorConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.ColorConfig)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional bool override_main_color = 1;</code>
     */
    boolean getOverrideMainColor();

    /**
     * <code>optional int32 main_color = 2;</code>
     */
    int getMainColor();

    /**
     * <code>optional bool override_text_color = 3;</code>
     */
    boolean getOverrideTextColor();

    /**
     * <code>optional int32 text_color = 4;</code>
     */
    int getTextColor();

    /**
     * <code>optional bool override_bg_color = 5;</code>
     */
    boolean getOverrideBgColor();

    /**
     * <code>optional int32 bg_color = 6;</code>
     */
    int getBgColor();

    /**
     * <code>optional bool override_tag_text_color = 7;</code>
     */
    boolean getOverrideTagTextColor();

    /**
     * <code>optional int32 tag_text_color = 8;</code>
     */
    int getTagTextColor();

    /**
     * <code>optional bool override_middle_bar_color = 9;</code>
     */
    boolean getOverrideMiddleBarColor();

    /**
     * <code>optional int32 middle_bar_color = 10;</code>
     */
    int getMiddleBarColor();
  }
  /**
   * Protobuf type {@code se.locutus.proto.ColorConfig}
   */
  public  static final class ColorConfig extends
      com.google.protobuf.GeneratedMessageLite<
          ColorConfig, ColorConfig.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.ColorConfig)
      ColorConfigOrBuilder {
    private ColorConfig() {
    }
    public static final int OVERRIDE_MAIN_COLOR_FIELD_NUMBER = 1;
    private boolean overrideMainColor_;
    /**
     * <code>optional bool override_main_color = 1;</code>
     */
    public boolean getOverrideMainColor() {
      return overrideMainColor_;
    }
    /**
     * <code>optional bool override_main_color = 1;</code>
     */
    private void setOverrideMainColor(boolean value) {
      
      overrideMainColor_ = value;
    }
    /**
     * <code>optional bool override_main_color = 1;</code>
     */
    private void clearOverrideMainColor() {
      
      overrideMainColor_ = false;
    }

    public static final int MAIN_COLOR_FIELD_NUMBER = 2;
    private int mainColor_;
    /**
     * <code>optional int32 main_color = 2;</code>
     */
    public int getMainColor() {
      return mainColor_;
    }
    /**
     * <code>optional int32 main_color = 2;</code>
     */
    private void setMainColor(int value) {
      
      mainColor_ = value;
    }
    /**
     * <code>optional int32 main_color = 2;</code>
     */
    private void clearMainColor() {
      
      mainColor_ = 0;
    }

    public static final int OVERRIDE_TEXT_COLOR_FIELD_NUMBER = 3;
    private boolean overrideTextColor_;
    /**
     * <code>optional bool override_text_color = 3;</code>
     */
    public boolean getOverrideTextColor() {
      return overrideTextColor_;
    }
    /**
     * <code>optional bool override_text_color = 3;</code>
     */
    private void setOverrideTextColor(boolean value) {
      
      overrideTextColor_ = value;
    }
    /**
     * <code>optional bool override_text_color = 3;</code>
     */
    private void clearOverrideTextColor() {
      
      overrideTextColor_ = false;
    }

    public static final int TEXT_COLOR_FIELD_NUMBER = 4;
    private int textColor_;
    /**
     * <code>optional int32 text_color = 4;</code>
     */
    public int getTextColor() {
      return textColor_;
    }
    /**
     * <code>optional int32 text_color = 4;</code>
     */
    private void setTextColor(int value) {
      
      textColor_ = value;
    }
    /**
     * <code>optional int32 text_color = 4;</code>
     */
    private void clearTextColor() {
      
      textColor_ = 0;
    }

    public static final int OVERRIDE_BG_COLOR_FIELD_NUMBER = 5;
    private boolean overrideBgColor_;
    /**
     * <code>optional bool override_bg_color = 5;</code>
     */
    public boolean getOverrideBgColor() {
      return overrideBgColor_;
    }
    /**
     * <code>optional bool override_bg_color = 5;</code>
     */
    private void setOverrideBgColor(boolean value) {
      
      overrideBgColor_ = value;
    }
    /**
     * <code>optional bool override_bg_color = 5;</code>
     */
    private void clearOverrideBgColor() {
      
      overrideBgColor_ = false;
    }

    public static final int BG_COLOR_FIELD_NUMBER = 6;
    private int bgColor_;
    /**
     * <code>optional int32 bg_color = 6;</code>
     */
    public int getBgColor() {
      return bgColor_;
    }
    /**
     * <code>optional int32 bg_color = 6;</code>
     */
    private void setBgColor(int value) {
      
      bgColor_ = value;
    }
    /**
     * <code>optional int32 bg_color = 6;</code>
     */
    private void clearBgColor() {
      
      bgColor_ = 0;
    }

    public static final int OVERRIDE_TAG_TEXT_COLOR_FIELD_NUMBER = 7;
    private boolean overrideTagTextColor_;
    /**
     * <code>optional bool override_tag_text_color = 7;</code>
     */
    public boolean getOverrideTagTextColor() {
      return overrideTagTextColor_;
    }
    /**
     * <code>optional bool override_tag_text_color = 7;</code>
     */
    private void setOverrideTagTextColor(boolean value) {
      
      overrideTagTextColor_ = value;
    }
    /**
     * <code>optional bool override_tag_text_color = 7;</code>
     */
    private void clearOverrideTagTextColor() {
      
      overrideTagTextColor_ = false;
    }

    public static final int TAG_TEXT_COLOR_FIELD_NUMBER = 8;
    private int tagTextColor_;
    /**
     * <code>optional int32 tag_text_color = 8;</code>
     */
    public int getTagTextColor() {
      return tagTextColor_;
    }
    /**
     * <code>optional int32 tag_text_color = 8;</code>
     */
    private void setTagTextColor(int value) {
      
      tagTextColor_ = value;
    }
    /**
     * <code>optional int32 tag_text_color = 8;</code>
     */
    private void clearTagTextColor() {
      
      tagTextColor_ = 0;
    }

    public static final int OVERRIDE_MIDDLE_BAR_COLOR_FIELD_NUMBER = 9;
    private boolean overrideMiddleBarColor_;
    /**
     * <code>optional bool override_middle_bar_color = 9;</code>
     */
    public boolean getOverrideMiddleBarColor() {
      return overrideMiddleBarColor_;
    }
    /**
     * <code>optional bool override_middle_bar_color = 9;</code>
     */
    private void setOverrideMiddleBarColor(boolean value) {
      
      overrideMiddleBarColor_ = value;
    }
    /**
     * <code>optional bool override_middle_bar_color = 9;</code>
     */
    private void clearOverrideMiddleBarColor() {
      
      overrideMiddleBarColor_ = false;
    }

    public static final int MIDDLE_BAR_COLOR_FIELD_NUMBER = 10;
    private int middleBarColor_;
    /**
     * <code>optional int32 middle_bar_color = 10;</code>
     */
    public int getMiddleBarColor() {
      return middleBarColor_;
    }
    /**
     * <code>optional int32 middle_bar_color = 10;</code>
     */
    private void setMiddleBarColor(int value) {
      
      middleBarColor_ = value;
    }
    /**
     * <code>optional int32 middle_bar_color = 10;</code>
     */
    private void clearMiddleBarColor() {
      
      middleBarColor_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (overrideMainColor_ != false) {
        output.writeBool(1, overrideMainColor_);
      }
      if (mainColor_ != 0) {
        output.writeInt32(2, mainColor_);
      }
      if (overrideTextColor_ != false) {
        output.writeBool(3, overrideTextColor_);
      }
      if (textColor_ != 0) {
        output.writeInt32(4, textColor_);
      }
      if (overrideBgColor_ != false) {
        output.writeBool(5, overrideBgColor_);
      }
      if (bgColor_ != 0) {
        output.writeInt32(6, bgColor_);
      }
      if (overrideTagTextColor_ != false) {
        output.writeBool(7, overrideTagTextColor_);
      }
      if (tagTextColor_ != 0) {
        output.writeInt32(8, tagTextColor_);
      }
      if (overrideMiddleBarColor_ != false) {
        output.writeBool(9, overrideMiddleBarColor_);
      }
      if (middleBarColor_ != 0) {
        output.writeInt32(10, middleBarColor_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (overrideMainColor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, overrideMainColor_);
      }
      if (mainColor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mainColor_);
      }
      if (overrideTextColor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, overrideTextColor_);
      }
      if (textColor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, textColor_);
      }
      if (overrideBgColor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, overrideBgColor_);
      }
      if (bgColor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, bgColor_);
      }
      if (overrideTagTextColor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, overrideTagTextColor_);
      }
      if (tagTextColor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, tagTextColor_);
      }
      if (overrideMiddleBarColor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, overrideMiddleBarColor_);
      }
      if (middleBarColor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, middleBarColor_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.ColorConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.ColorConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ColorConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.ColorConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ColorConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ColorConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ColorConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ColorConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ColorConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ColorConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.ColorConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code se.locutus.proto.ColorConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.ColorConfig, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.ColorConfig)
        se.locutus.proto.Ng.ColorConfigOrBuilder {
      // Construct using se.locutus.proto.Ng.ColorConfig.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional bool override_main_color = 1;</code>
       */
      public boolean getOverrideMainColor() {
        return instance.getOverrideMainColor();
      }
      /**
       * <code>optional bool override_main_color = 1;</code>
       */
      public Builder setOverrideMainColor(boolean value) {
        copyOnWrite();
        instance.setOverrideMainColor(value);
        return this;
      }
      /**
       * <code>optional bool override_main_color = 1;</code>
       */
      public Builder clearOverrideMainColor() {
        copyOnWrite();
        instance.clearOverrideMainColor();
        return this;
      }

      /**
       * <code>optional int32 main_color = 2;</code>
       */
      public int getMainColor() {
        return instance.getMainColor();
      }
      /**
       * <code>optional int32 main_color = 2;</code>
       */
      public Builder setMainColor(int value) {
        copyOnWrite();
        instance.setMainColor(value);
        return this;
      }
      /**
       * <code>optional int32 main_color = 2;</code>
       */
      public Builder clearMainColor() {
        copyOnWrite();
        instance.clearMainColor();
        return this;
      }

      /**
       * <code>optional bool override_text_color = 3;</code>
       */
      public boolean getOverrideTextColor() {
        return instance.getOverrideTextColor();
      }
      /**
       * <code>optional bool override_text_color = 3;</code>
       */
      public Builder setOverrideTextColor(boolean value) {
        copyOnWrite();
        instance.setOverrideTextColor(value);
        return this;
      }
      /**
       * <code>optional bool override_text_color = 3;</code>
       */
      public Builder clearOverrideTextColor() {
        copyOnWrite();
        instance.clearOverrideTextColor();
        return this;
      }

      /**
       * <code>optional int32 text_color = 4;</code>
       */
      public int getTextColor() {
        return instance.getTextColor();
      }
      /**
       * <code>optional int32 text_color = 4;</code>
       */
      public Builder setTextColor(int value) {
        copyOnWrite();
        instance.setTextColor(value);
        return this;
      }
      /**
       * <code>optional int32 text_color = 4;</code>
       */
      public Builder clearTextColor() {
        copyOnWrite();
        instance.clearTextColor();
        return this;
      }

      /**
       * <code>optional bool override_bg_color = 5;</code>
       */
      public boolean getOverrideBgColor() {
        return instance.getOverrideBgColor();
      }
      /**
       * <code>optional bool override_bg_color = 5;</code>
       */
      public Builder setOverrideBgColor(boolean value) {
        copyOnWrite();
        instance.setOverrideBgColor(value);
        return this;
      }
      /**
       * <code>optional bool override_bg_color = 5;</code>
       */
      public Builder clearOverrideBgColor() {
        copyOnWrite();
        instance.clearOverrideBgColor();
        return this;
      }

      /**
       * <code>optional int32 bg_color = 6;</code>
       */
      public int getBgColor() {
        return instance.getBgColor();
      }
      /**
       * <code>optional int32 bg_color = 6;</code>
       */
      public Builder setBgColor(int value) {
        copyOnWrite();
        instance.setBgColor(value);
        return this;
      }
      /**
       * <code>optional int32 bg_color = 6;</code>
       */
      public Builder clearBgColor() {
        copyOnWrite();
        instance.clearBgColor();
        return this;
      }

      /**
       * <code>optional bool override_tag_text_color = 7;</code>
       */
      public boolean getOverrideTagTextColor() {
        return instance.getOverrideTagTextColor();
      }
      /**
       * <code>optional bool override_tag_text_color = 7;</code>
       */
      public Builder setOverrideTagTextColor(boolean value) {
        copyOnWrite();
        instance.setOverrideTagTextColor(value);
        return this;
      }
      /**
       * <code>optional bool override_tag_text_color = 7;</code>
       */
      public Builder clearOverrideTagTextColor() {
        copyOnWrite();
        instance.clearOverrideTagTextColor();
        return this;
      }

      /**
       * <code>optional int32 tag_text_color = 8;</code>
       */
      public int getTagTextColor() {
        return instance.getTagTextColor();
      }
      /**
       * <code>optional int32 tag_text_color = 8;</code>
       */
      public Builder setTagTextColor(int value) {
        copyOnWrite();
        instance.setTagTextColor(value);
        return this;
      }
      /**
       * <code>optional int32 tag_text_color = 8;</code>
       */
      public Builder clearTagTextColor() {
        copyOnWrite();
        instance.clearTagTextColor();
        return this;
      }

      /**
       * <code>optional bool override_middle_bar_color = 9;</code>
       */
      public boolean getOverrideMiddleBarColor() {
        return instance.getOverrideMiddleBarColor();
      }
      /**
       * <code>optional bool override_middle_bar_color = 9;</code>
       */
      public Builder setOverrideMiddleBarColor(boolean value) {
        copyOnWrite();
        instance.setOverrideMiddleBarColor(value);
        return this;
      }
      /**
       * <code>optional bool override_middle_bar_color = 9;</code>
       */
      public Builder clearOverrideMiddleBarColor() {
        copyOnWrite();
        instance.clearOverrideMiddleBarColor();
        return this;
      }

      /**
       * <code>optional int32 middle_bar_color = 10;</code>
       */
      public int getMiddleBarColor() {
        return instance.getMiddleBarColor();
      }
      /**
       * <code>optional int32 middle_bar_color = 10;</code>
       */
      public Builder setMiddleBarColor(int value) {
        copyOnWrite();
        instance.setMiddleBarColor(value);
        return this;
      }
      /**
       * <code>optional int32 middle_bar_color = 10;</code>
       */
      public Builder clearMiddleBarColor() {
        copyOnWrite();
        instance.clearMiddleBarColor();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.ColorConfig)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.ColorConfig();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.ColorConfig other = (se.locutus.proto.Ng.ColorConfig) arg1;
          overrideMainColor_ = visitor.visitBoolean(overrideMainColor_ != false, overrideMainColor_,
              other.overrideMainColor_ != false, other.overrideMainColor_);
          mainColor_ = visitor.visitInt(mainColor_ != 0, mainColor_,
              other.mainColor_ != 0, other.mainColor_);
          overrideTextColor_ = visitor.visitBoolean(overrideTextColor_ != false, overrideTextColor_,
              other.overrideTextColor_ != false, other.overrideTextColor_);
          textColor_ = visitor.visitInt(textColor_ != 0, textColor_,
              other.textColor_ != 0, other.textColor_);
          overrideBgColor_ = visitor.visitBoolean(overrideBgColor_ != false, overrideBgColor_,
              other.overrideBgColor_ != false, other.overrideBgColor_);
          bgColor_ = visitor.visitInt(bgColor_ != 0, bgColor_,
              other.bgColor_ != 0, other.bgColor_);
          overrideTagTextColor_ = visitor.visitBoolean(overrideTagTextColor_ != false, overrideTagTextColor_,
              other.overrideTagTextColor_ != false, other.overrideTagTextColor_);
          tagTextColor_ = visitor.visitInt(tagTextColor_ != 0, tagTextColor_,
              other.tagTextColor_ != 0, other.tagTextColor_);
          overrideMiddleBarColor_ = visitor.visitBoolean(overrideMiddleBarColor_ != false, overrideMiddleBarColor_,
              other.overrideMiddleBarColor_ != false, other.overrideMiddleBarColor_);
          middleBarColor_ = visitor.visitInt(middleBarColor_ != 0, middleBarColor_,
              other.middleBarColor_ != 0, other.middleBarColor_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  overrideMainColor_ = input.readBool();
                  break;
                }
                case 16: {

                  mainColor_ = input.readInt32();
                  break;
                }
                case 24: {

                  overrideTextColor_ = input.readBool();
                  break;
                }
                case 32: {

                  textColor_ = input.readInt32();
                  break;
                }
                case 40: {

                  overrideBgColor_ = input.readBool();
                  break;
                }
                case 48: {

                  bgColor_ = input.readInt32();
                  break;
                }
                case 56: {

                  overrideTagTextColor_ = input.readBool();
                  break;
                }
                case 64: {

                  tagTextColor_ = input.readInt32();
                  break;
                }
                case 72: {

                  overrideMiddleBarColor_ = input.readBool();
                  break;
                }
                case 80: {

                  middleBarColor_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.ColorConfig.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.ColorConfig)
    private static final se.locutus.proto.Ng.ColorConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ColorConfig();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.ColorConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ColorConfig> PARSER;

    public static com.google.protobuf.Parser<ColorConfig> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ThemeDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.ThemeData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Color config.
     * </pre>
     *
     * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
     */
    boolean hasColorConfig();
    /**
     * <pre>
     * Color config.
     * </pre>
     *
     * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
     */
    se.locutus.proto.Ng.ColorConfig getColorConfig();

    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */
    int getDepartureNameMappingsCount();
    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */
    boolean containsDepartureNameMappings(
        java.lang.String key);
    /**
     * Use {@link #getDepartureNameMappingsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getDepartureNameMappings();
    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getDepartureNameMappingsMap();
    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */

    java.lang.String getDepartureNameMappingsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */

    java.lang.String getDepartureNameMappingsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code se.locutus.proto.ThemeData}
   */
  public  static final class ThemeData extends
      com.google.protobuf.GeneratedMessageLite<
          ThemeData, ThemeData.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.ThemeData)
      ThemeDataOrBuilder {
    private ThemeData() {
    }
    private int bitField0_;
    public static final int COLOR_CONFIG_FIELD_NUMBER = 1;
    private se.locutus.proto.Ng.ColorConfig colorConfig_;
    /**
     * <pre>
     * Color config.
     * </pre>
     *
     * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
     */
    public boolean hasColorConfig() {
      return colorConfig_ != null;
    }
    /**
     * <pre>
     * Color config.
     * </pre>
     *
     * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
     */
    public se.locutus.proto.Ng.ColorConfig getColorConfig() {
      return colorConfig_ == null ? se.locutus.proto.Ng.ColorConfig.getDefaultInstance() : colorConfig_;
    }
    /**
     * <pre>
     * Color config.
     * </pre>
     *
     * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
     */
    private void setColorConfig(se.locutus.proto.Ng.ColorConfig value) {
      if (value == null) {
        throw new NullPointerException();
      }
      colorConfig_ = value;
      
      }
    /**
     * <pre>
     * Color config.
     * </pre>
     *
     * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
     */
    private void setColorConfig(
        se.locutus.proto.Ng.ColorConfig.Builder builderForValue) {
      colorConfig_ = builderForValue.build();
      
    }
    /**
     * <pre>
     * Color config.
     * </pre>
     *
     * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
     */
    private void mergeColorConfig(se.locutus.proto.Ng.ColorConfig value) {
      if (colorConfig_ != null &&
          colorConfig_ != se.locutus.proto.Ng.ColorConfig.getDefaultInstance()) {
        colorConfig_ =
          se.locutus.proto.Ng.ColorConfig.newBuilder(colorConfig_).mergeFrom(value).buildPartial();
      } else {
        colorConfig_ = value;
      }
      
    }
    /**
     * <pre>
     * Color config.
     * </pre>
     *
     * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
     */
    private void clearColorConfig() {  colorConfig_ = null;
      
    }

    public static final int DEPARTURE_NAME_MAPPINGS_FIELD_NUMBER = 2;
    private static final class DepartureNameMappingsDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, java.lang.String> departureNameMappings_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
    internalGetDepartureNameMappings() {
      return departureNameMappings_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
    internalGetMutableDepartureNameMappings() {
      if (!departureNameMappings_.isMutable()) {
        departureNameMappings_ = departureNameMappings_.mutableCopy();
      }
      return departureNameMappings_;
    }

    public int getDepartureNameMappingsCount() {
      return internalGetDepartureNameMappings().size();
    }
    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */

    public boolean containsDepartureNameMappings(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetDepartureNameMappings().containsKey(key);
    }
    /**
     * Use {@link #getDepartureNameMappingsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getDepartureNameMappings() {
      return getDepartureNameMappingsMap();
    }
    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getDepartureNameMappingsMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetDepartureNameMappings());
    }
    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */

    public java.lang.String getDepartureNameMappingsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetDepartureNameMappings();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */

    public java.lang.String getDepartureNameMappingsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetDepartureNameMappings();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Custom departure names.
     * </pre>
     *
     * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
     */
    private java.util.Map<java.lang.String, java.lang.String>
    getMutableDepartureNameMappingsMap() {
      return internalGetMutableDepartureNameMappings();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (colorConfig_ != null) {
        output.writeMessage(1, getColorConfig());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetDepartureNameMappings().entrySet()) {
        DepartureNameMappingsDefaultEntryHolder.defaultEntry.serializeTo(
            output, 2, entry.getKey(), entry.getValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (colorConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getColorConfig());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetDepartureNameMappings().entrySet()) {
        size += DepartureNameMappingsDefaultEntryHolder.defaultEntry.computeMessageSize(
          2, entry.getKey(), entry.getValue());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.ThemeData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.ThemeData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ThemeData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.ThemeData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ThemeData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ThemeData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ThemeData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ThemeData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.ThemeData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.ThemeData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.ThemeData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code se.locutus.proto.ThemeData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.ThemeData, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.ThemeData)
        se.locutus.proto.Ng.ThemeDataOrBuilder {
      // Construct using se.locutus.proto.Ng.ThemeData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Color config.
       * </pre>
       *
       * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
       */
      public boolean hasColorConfig() {
        return instance.hasColorConfig();
      }
      /**
       * <pre>
       * Color config.
       * </pre>
       *
       * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
       */
      public se.locutus.proto.Ng.ColorConfig getColorConfig() {
        return instance.getColorConfig();
      }
      /**
       * <pre>
       * Color config.
       * </pre>
       *
       * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
       */
      public Builder setColorConfig(se.locutus.proto.Ng.ColorConfig value) {
        copyOnWrite();
        instance.setColorConfig(value);
        return this;
        }
      /**
       * <pre>
       * Color config.
       * </pre>
       *
       * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
       */
      public Builder setColorConfig(
          se.locutus.proto.Ng.ColorConfig.Builder builderForValue) {
        copyOnWrite();
        instance.setColorConfig(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Color config.
       * </pre>
       *
       * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
       */
      public Builder mergeColorConfig(se.locutus.proto.Ng.ColorConfig value) {
        copyOnWrite();
        instance.mergeColorConfig(value);
        return this;
      }
      /**
       * <pre>
       * Color config.
       * </pre>
       *
       * <code>optional .se.locutus.proto.ColorConfig color_config = 1;</code>
       */
      public Builder clearColorConfig() {  copyOnWrite();
        instance.clearColorConfig();
        return this;
      }


      public int getDepartureNameMappingsCount() {
        return instance.getDepartureNameMappingsMap().size();
      }
      /**
       * <pre>
       * Custom departure names.
       * </pre>
       *
       * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
       */

      public boolean containsDepartureNameMappings(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return instance.getDepartureNameMappingsMap().containsKey(key);
      }

      public Builder clearDepartureNameMappings() {
        copyOnWrite();
        instance.getMutableDepartureNameMappingsMap().clear();
        return this;
      }
      /**
       * <pre>
       * Custom departure names.
       * </pre>
       *
       * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
       */

      public Builder removeDepartureNameMappings(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutableDepartureNameMappingsMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getDepartureNameMappingsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getDepartureNameMappings() {
        return getDepartureNameMappingsMap();
      }
      /**
       * <pre>
       * Custom departure names.
       * </pre>
       *
       * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
       */
      public java.util.Map<java.lang.String, java.lang.String> getDepartureNameMappingsMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getDepartureNameMappingsMap());
      }
      /**
       * <pre>
       * Custom departure names.
       * </pre>
       *
       * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
       */

      public java.lang.String getDepartureNameMappingsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            instance.getDepartureNameMappingsMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Custom departure names.
       * </pre>
       *
       * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
       */

      public java.lang.String getDepartureNameMappingsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            instance.getDepartureNameMappingsMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <pre>
       * Custom departure names.
       * </pre>
       *
       * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
       */
      public Builder putDepartureNameMappings(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutableDepartureNameMappingsMap().put(key, value);
        return this;
      }
      /**
       * <pre>
       * Custom departure names.
       * </pre>
       *
       * <code>map&lt;string, string&gt; departure_name_mappings = 2;</code>
       */
      public Builder putAllDepartureNameMappings(
          java.util.Map<java.lang.String, java.lang.String> values) {
        copyOnWrite();
        instance.getMutableDepartureNameMappingsMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.ThemeData)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.ThemeData();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          departureNameMappings_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.ThemeData other = (se.locutus.proto.Ng.ThemeData) arg1;
          colorConfig_ = visitor.visitMessage(colorConfig_, other.colorConfig_);
          departureNameMappings_ = visitor.visitMap(
              departureNameMappings_, other.internalGetDepartureNameMappings());
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  se.locutus.proto.Ng.ColorConfig.Builder subBuilder = null;
                  if (colorConfig_ != null) {
                    subBuilder = colorConfig_.toBuilder();
                  }
                  colorConfig_ = input.readMessage(se.locutus.proto.Ng.ColorConfig.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorConfig_);
                    colorConfig_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  if (!departureNameMappings_.isMutable()) {
                    departureNameMappings_ = departureNameMappings_.mutableCopy();
                  }
                  DepartureNameMappingsDefaultEntryHolder.defaultEntry.parseInto(departureNameMappings_, input, extensionRegistry);  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.ThemeData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.ThemeData)
    private static final se.locutus.proto.Ng.ThemeData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ThemeData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.ThemeData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ThemeData> PARSER;

    public static com.google.protobuf.Parser<ThemeData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StopConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.locutus.proto.StopConfiguration)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
     */
    boolean hasStopData();
    /**
     * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
     */
    se.locutus.proto.Ng.StoredStopData getStopData();

    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    boolean hasDeparturesFilter();
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    se.locutus.proto.Ng.DeparturesFilter getDeparturesFilter();

    /**
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    boolean hasLineFilter();
    /**
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    se.locutus.proto.Ng.LineFilter getLineFilter();

    /**
     * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
     */
    boolean hasThemeData();
    /**
     * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
     */
    se.locutus.proto.Ng.ThemeData getThemeData();
  }
  /**
   * Protobuf type {@code se.locutus.proto.StopConfiguration}
   */
  public  static final class StopConfiguration extends
      com.google.protobuf.GeneratedMessageLite<
          StopConfiguration, StopConfiguration.Builder> implements
      // @@protoc_insertion_point(message_implements:se.locutus.proto.StopConfiguration)
      StopConfigurationOrBuilder {
    private StopConfiguration() {
    }
    public static final int STOP_DATA_FIELD_NUMBER = 1;
    private se.locutus.proto.Ng.StoredStopData stopData_;
    /**
     * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
     */
    public boolean hasStopData() {
      return stopData_ != null;
    }
    /**
     * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
     */
    public se.locutus.proto.Ng.StoredStopData getStopData() {
      return stopData_ == null ? se.locutus.proto.Ng.StoredStopData.getDefaultInstance() : stopData_;
    }
    /**
     * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
     */
    private void setStopData(se.locutus.proto.Ng.StoredStopData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      stopData_ = value;
      
      }
    /**
     * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
     */
    private void setStopData(
        se.locutus.proto.Ng.StoredStopData.Builder builderForValue) {
      stopData_ = builderForValue.build();
      
    }
    /**
     * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
     */
    private void mergeStopData(se.locutus.proto.Ng.StoredStopData value) {
      if (stopData_ != null &&
          stopData_ != se.locutus.proto.Ng.StoredStopData.getDefaultInstance()) {
        stopData_ =
          se.locutus.proto.Ng.StoredStopData.newBuilder(stopData_).mergeFrom(value).buildPartial();
      } else {
        stopData_ = value;
      }
      
    }
    /**
     * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
     */
    private void clearStopData() {  stopData_ = null;
      
    }

    public static final int DEPARTURES_FILTER_FIELD_NUMBER = 2;
    private se.locutus.proto.Ng.DeparturesFilter departuresFilter_;
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    public boolean hasDeparturesFilter() {
      return departuresFilter_ != null;
    }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    public se.locutus.proto.Ng.DeparturesFilter getDeparturesFilter() {
      return departuresFilter_ == null ? se.locutus.proto.Ng.DeparturesFilter.getDefaultInstance() : departuresFilter_;
    }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    private void setDeparturesFilter(se.locutus.proto.Ng.DeparturesFilter value) {
      if (value == null) {
        throw new NullPointerException();
      }
      departuresFilter_ = value;
      
      }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    private void setDeparturesFilter(
        se.locutus.proto.Ng.DeparturesFilter.Builder builderForValue) {
      departuresFilter_ = builderForValue.build();
      
    }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    private void mergeDeparturesFilter(se.locutus.proto.Ng.DeparturesFilter value) {
      if (departuresFilter_ != null &&
          departuresFilter_ != se.locutus.proto.Ng.DeparturesFilter.getDefaultInstance()) {
        departuresFilter_ =
          se.locutus.proto.Ng.DeparturesFilter.newBuilder(departuresFilter_).mergeFrom(value).buildPartial();
      } else {
        departuresFilter_ = value;
      }
      
    }
    /**
     * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
     */
    private void clearDeparturesFilter() {  departuresFilter_ = null;
      
    }

    public static final int LINE_FILTER_FIELD_NUMBER = 3;
    private se.locutus.proto.Ng.LineFilter lineFilter_;
    /**
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    public boolean hasLineFilter() {
      return lineFilter_ != null;
    }
    /**
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    public se.locutus.proto.Ng.LineFilter getLineFilter() {
      return lineFilter_ == null ? se.locutus.proto.Ng.LineFilter.getDefaultInstance() : lineFilter_;
    }
    /**
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    private void setLineFilter(se.locutus.proto.Ng.LineFilter value) {
      if (value == null) {
        throw new NullPointerException();
      }
      lineFilter_ = value;
      
      }
    /**
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    private void setLineFilter(
        se.locutus.proto.Ng.LineFilter.Builder builderForValue) {
      lineFilter_ = builderForValue.build();
      
    }
    /**
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    private void mergeLineFilter(se.locutus.proto.Ng.LineFilter value) {
      if (lineFilter_ != null &&
          lineFilter_ != se.locutus.proto.Ng.LineFilter.getDefaultInstance()) {
        lineFilter_ =
          se.locutus.proto.Ng.LineFilter.newBuilder(lineFilter_).mergeFrom(value).buildPartial();
      } else {
        lineFilter_ = value;
      }
      
    }
    /**
     * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
     */
    private void clearLineFilter() {  lineFilter_ = null;
      
    }

    public static final int THEME_DATA_FIELD_NUMBER = 4;
    private se.locutus.proto.Ng.ThemeData themeData_;
    /**
     * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
     */
    public boolean hasThemeData() {
      return themeData_ != null;
    }
    /**
     * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
     */
    public se.locutus.proto.Ng.ThemeData getThemeData() {
      return themeData_ == null ? se.locutus.proto.Ng.ThemeData.getDefaultInstance() : themeData_;
    }
    /**
     * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
     */
    private void setThemeData(se.locutus.proto.Ng.ThemeData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      themeData_ = value;
      
      }
    /**
     * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
     */
    private void setThemeData(
        se.locutus.proto.Ng.ThemeData.Builder builderForValue) {
      themeData_ = builderForValue.build();
      
    }
    /**
     * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
     */
    private void mergeThemeData(se.locutus.proto.Ng.ThemeData value) {
      if (themeData_ != null &&
          themeData_ != se.locutus.proto.Ng.ThemeData.getDefaultInstance()) {
        themeData_ =
          se.locutus.proto.Ng.ThemeData.newBuilder(themeData_).mergeFrom(value).buildPartial();
      } else {
        themeData_ = value;
      }
      
    }
    /**
     * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
     */
    private void clearThemeData() {  themeData_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (stopData_ != null) {
        output.writeMessage(1, getStopData());
      }
      if (departuresFilter_ != null) {
        output.writeMessage(2, getDeparturesFilter());
      }
      if (lineFilter_ != null) {
        output.writeMessage(3, getLineFilter());
      }
      if (themeData_ != null) {
        output.writeMessage(4, getThemeData());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (stopData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStopData());
      }
      if (departuresFilter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDeparturesFilter());
      }
      if (lineFilter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLineFilter());
      }
      if (themeData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getThemeData());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.locutus.proto.Ng.StopConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.StopConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.locutus.proto.Ng.StopConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StopConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StopConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.locutus.proto.Ng.StopConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.locutus.proto.Ng.StopConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.locutus.proto.Ng.StopConfiguration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code se.locutus.proto.StopConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.locutus.proto.Ng.StopConfiguration, Builder> implements
        // @@protoc_insertion_point(builder_implements:se.locutus.proto.StopConfiguration)
        se.locutus.proto.Ng.StopConfigurationOrBuilder {
      // Construct using se.locutus.proto.Ng.StopConfiguration.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
       */
      public boolean hasStopData() {
        return instance.hasStopData();
      }
      /**
       * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
       */
      public se.locutus.proto.Ng.StoredStopData getStopData() {
        return instance.getStopData();
      }
      /**
       * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
       */
      public Builder setStopData(se.locutus.proto.Ng.StoredStopData value) {
        copyOnWrite();
        instance.setStopData(value);
        return this;
        }
      /**
       * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
       */
      public Builder setStopData(
          se.locutus.proto.Ng.StoredStopData.Builder builderForValue) {
        copyOnWrite();
        instance.setStopData(builderForValue);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
       */
      public Builder mergeStopData(se.locutus.proto.Ng.StoredStopData value) {
        copyOnWrite();
        instance.mergeStopData(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.StoredStopData stop_data = 1;</code>
       */
      public Builder clearStopData() {  copyOnWrite();
        instance.clearStopData();
        return this;
      }

      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public boolean hasDeparturesFilter() {
        return instance.hasDeparturesFilter();
      }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public se.locutus.proto.Ng.DeparturesFilter getDeparturesFilter() {
        return instance.getDeparturesFilter();
      }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public Builder setDeparturesFilter(se.locutus.proto.Ng.DeparturesFilter value) {
        copyOnWrite();
        instance.setDeparturesFilter(value);
        return this;
        }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public Builder setDeparturesFilter(
          se.locutus.proto.Ng.DeparturesFilter.Builder builderForValue) {
        copyOnWrite();
        instance.setDeparturesFilter(builderForValue);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public Builder mergeDeparturesFilter(se.locutus.proto.Ng.DeparturesFilter value) {
        copyOnWrite();
        instance.mergeDeparturesFilter(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.DeparturesFilter departures_filter = 2;</code>
       */
      public Builder clearDeparturesFilter() {  copyOnWrite();
        instance.clearDeparturesFilter();
        return this;
      }

      /**
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public boolean hasLineFilter() {
        return instance.hasLineFilter();
      }
      /**
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public se.locutus.proto.Ng.LineFilter getLineFilter() {
        return instance.getLineFilter();
      }
      /**
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public Builder setLineFilter(se.locutus.proto.Ng.LineFilter value) {
        copyOnWrite();
        instance.setLineFilter(value);
        return this;
        }
      /**
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public Builder setLineFilter(
          se.locutus.proto.Ng.LineFilter.Builder builderForValue) {
        copyOnWrite();
        instance.setLineFilter(builderForValue);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public Builder mergeLineFilter(se.locutus.proto.Ng.LineFilter value) {
        copyOnWrite();
        instance.mergeLineFilter(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.LineFilter line_filter = 3;</code>
       */
      public Builder clearLineFilter() {  copyOnWrite();
        instance.clearLineFilter();
        return this;
      }

      /**
       * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
       */
      public boolean hasThemeData() {
        return instance.hasThemeData();
      }
      /**
       * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
       */
      public se.locutus.proto.Ng.ThemeData getThemeData() {
        return instance.getThemeData();
      }
      /**
       * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
       */
      public Builder setThemeData(se.locutus.proto.Ng.ThemeData value) {
        copyOnWrite();
        instance.setThemeData(value);
        return this;
        }
      /**
       * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
       */
      public Builder setThemeData(
          se.locutus.proto.Ng.ThemeData.Builder builderForValue) {
        copyOnWrite();
        instance.setThemeData(builderForValue);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
       */
      public Builder mergeThemeData(se.locutus.proto.Ng.ThemeData value) {
        copyOnWrite();
        instance.mergeThemeData(value);
        return this;
      }
      /**
       * <code>optional .se.locutus.proto.ThemeData theme_data = 4;</code>
       */
      public Builder clearThemeData() {  copyOnWrite();
        instance.clearThemeData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.locutus.proto.StopConfiguration)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.locutus.proto.Ng.StopConfiguration();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.locutus.proto.Ng.StopConfiguration other = (se.locutus.proto.Ng.StopConfiguration) arg1;
          stopData_ = visitor.visitMessage(stopData_, other.stopData_);
          departuresFilter_ = visitor.visitMessage(departuresFilter_, other.departuresFilter_);
          lineFilter_ = visitor.visitMessage(lineFilter_, other.lineFilter_);
          themeData_ = visitor.visitMessage(themeData_, other.themeData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  se.locutus.proto.Ng.StoredStopData.Builder subBuilder = null;
                  if (stopData_ != null) {
                    subBuilder = stopData_.toBuilder();
                  }
                  stopData_ = input.readMessage(se.locutus.proto.Ng.StoredStopData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(stopData_);
                    stopData_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  se.locutus.proto.Ng.DeparturesFilter.Builder subBuilder = null;
                  if (departuresFilter_ != null) {
                    subBuilder = departuresFilter_.toBuilder();
                  }
                  departuresFilter_ = input.readMessage(se.locutus.proto.Ng.DeparturesFilter.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(departuresFilter_);
                    departuresFilter_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  se.locutus.proto.Ng.LineFilter.Builder subBuilder = null;
                  if (lineFilter_ != null) {
                    subBuilder = lineFilter_.toBuilder();
                  }
                  lineFilter_ = input.readMessage(se.locutus.proto.Ng.LineFilter.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(lineFilter_);
                    lineFilter_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  se.locutus.proto.Ng.ThemeData.Builder subBuilder = null;
                  if (themeData_ != null) {
                    subBuilder = themeData_.toBuilder();
                  }
                  themeData_ = input.readMessage(se.locutus.proto.Ng.ThemeData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(themeData_);
                    themeData_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.locutus.proto.Ng.StopConfiguration.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:se.locutus.proto.StopConfiguration)
    private static final se.locutus.proto.Ng.StopConfiguration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StopConfiguration();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.locutus.proto.Ng.StopConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StopConfiguration> PARSER;

    public static com.google.protobuf.Parser<StopConfiguration> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
